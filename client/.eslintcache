[{"C:\\xampp8\\htdocs\\apparelisland\\client\\src\\index.js":"1","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\App.js":"2","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Store.js":"3","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Order.js":"4","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Login.js":"5","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Dashboard.js":"6","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\actions\\types.js":"7","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\actions\\axios.js":"8","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\NavItem.js":"9","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\TimelineItem.js":"10","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Chat.js":"11","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Sidebar.js":"12","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Forum.js":"13","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\HeaderStats.js":"14","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\DashboardMain.js":"15","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\DashboardOrder.js":"16","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\DashboardOrderCreate.js":"17","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\DashboardDepartmentCreate.js":"18","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\DashboardDepartment.js":"19","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Dropdowns\\NotificationDropdown.js":"20","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Dropdowns\\UserDropdown.js":"21","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Cards\\CardStats.js":"22","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Cards\\CardLineChart.js":"23","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Cards\\CardBarChart.js":"24","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Cards\\CardPageVisits.js":"25","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Cards\\CardSocialTraffic.js":"26","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Modal.js":"27","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\ForumModal.js":"28","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\hooks\\useModal.js":"29","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\index.js":"30","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\App.js":"31","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Store.js":"32","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Order.js":"33","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Login.js":"34","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Dashboard.js":"35","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\actions\\types.js":"36","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\actions\\axios.js":"37","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\TimelineItem.js":"38","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\NavItem.js":"39","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Chat.js":"40","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Forum.js":"41","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Sidebar.js":"42","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\HeaderStats.js":"43","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\DashboardMain.js":"44","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\DashboardOrder.js":"45","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\DashboardDepartmentCreate.js":"46","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\DashboardOrderCreate.js":"47","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\DashboardDepartment.js":"48","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Dropdowns\\NotificationDropdown.js":"49","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Dropdowns\\UserDropdown.js":"50","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Cards\\CardStats.js":"51","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Cards\\CardLineChart.js":"52","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Cards\\CardBarChart.js":"53","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Cards\\CardPageVisits.js":"54","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Cards\\CardSocialTraffic.js":"55","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Modal.js":"56","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\ForumModal.js":"57","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\hooks\\useModal.js":"58","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\DashboardUsers.js":"59","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\DashboardUsersCreate.js":"60"},{"size":344,"mtime":1612985011630,"results":"61","hashOfConfig":"62"},{"size":1010,"mtime":1613378832957,"results":"63","hashOfConfig":"62"},{"size":2661,"mtime":1613373076972,"results":"64","hashOfConfig":"62"},{"size":6733,"mtime":1613379288720,"results":"65","hashOfConfig":"62"},{"size":6955,"mtime":1613367848407,"results":"66","hashOfConfig":"62"},{"size":2833,"mtime":1613379533982,"results":"67","hashOfConfig":"62"},{"size":450,"mtime":1613365332553,"results":"68","hashOfConfig":"62"},{"size":136,"mtime":1613406135261,"results":"69","hashOfConfig":"62"},{"size":772,"mtime":1612985011614,"results":"70","hashOfConfig":"62"},{"size":3613,"mtime":1613377743126,"results":"71","hashOfConfig":"62"},{"size":5718,"mtime":1613376750018,"results":"72","hashOfConfig":"62"},{"size":4706,"mtime":1613373335958,"results":"73","hashOfConfig":"62"},{"size":3338,"mtime":1613380384297,"results":"74","hashOfConfig":"62"},{"size":2946,"mtime":1612985011614,"results":"75","hashOfConfig":"62"},{"size":1295,"mtime":1613367808620,"results":"76","hashOfConfig":"62"},{"size":6890,"mtime":1613372494036,"results":"77","hashOfConfig":"62"},{"size":6833,"mtime":1613373457958,"results":"78","hashOfConfig":"62"},{"size":3950,"mtime":1613049508658,"results":"79","hashOfConfig":"62"},{"size":5230,"mtime":1613108580010,"results":"80","hashOfConfig":"62"},{"size":2461,"mtime":1612985011614,"results":"81","hashOfConfig":"62"},{"size":3130,"mtime":1612985011614,"results":"82","hashOfConfig":"62"},{"size":2561,"mtime":1612985011599,"results":"83","hashOfConfig":"62"},{"size":4499,"mtime":1612985011599,"results":"84","hashOfConfig":"62"},{"size":4186,"mtime":1612985011599,"results":"85","hashOfConfig":"62"},{"size":6377,"mtime":1612985011599,"results":"86","hashOfConfig":"62"},{"size":7713,"mtime":1612985011599,"results":"87","hashOfConfig":"62"},{"size":2679,"mtime":1613161174426,"results":"88","hashOfConfig":"62"},{"size":3484,"mtime":1613161370316,"results":"89","hashOfConfig":"62"},{"size":293,"mtime":1613161451384,"results":"90","hashOfConfig":"62"},{"size":344,"mtime":1612985011630,"results":"91","hashOfConfig":"92"},{"size":1010,"mtime":1613765886941,"results":"93","hashOfConfig":"92"},{"size":2307,"mtime":1613768780313,"results":"94","hashOfConfig":"92"},{"size":7639,"mtime":1613796075199,"results":"95","hashOfConfig":"92"},{"size":7516,"mtime":1618577405208,"results":"96","hashOfConfig":"92"},{"size":2270,"mtime":1614344732422,"results":"97","hashOfConfig":"92"},{"size":262,"mtime":1613768804548,"results":"98","hashOfConfig":"92"},{"size":115,"mtime":1618782408810,"results":"99","hashOfConfig":"92"},{"size":3819,"mtime":1613756770997,"results":"100","hashOfConfig":"92"},{"size":772,"mtime":1612985011614,"results":"101","hashOfConfig":"92"},{"size":6883,"mtime":1614342022425,"results":"102","hashOfConfig":"92"},{"size":3338,"mtime":1613380384297,"results":"103","hashOfConfig":"92"},{"size":6389,"mtime":1614363721510,"results":"104","hashOfConfig":"92"},{"size":2946,"mtime":1612985011614,"results":"105","hashOfConfig":"92"},{"size":2531,"mtime":1614360179322,"results":"106","hashOfConfig":"92"},{"size":16620,"mtime":1618783994964,"results":"107","hashOfConfig":"92"},{"size":5143,"mtime":1614226675531,"results":"108","hashOfConfig":"92"},{"size":20796,"mtime":1618782296231,"results":"109","hashOfConfig":"92"},{"size":5792,"mtime":1614226101520,"results":"110","hashOfConfig":"92"},{"size":2461,"mtime":1612985011614,"results":"111","hashOfConfig":"92"},{"size":3130,"mtime":1612985011614,"results":"112","hashOfConfig":"92"},{"size":2561,"mtime":1612985011599,"results":"113","hashOfConfig":"92"},{"size":4595,"mtime":1613799788869,"results":"114","hashOfConfig":"92"},{"size":4279,"mtime":1613800419606,"results":"115","hashOfConfig":"92"},{"size":6377,"mtime":1612985011599,"results":"116","hashOfConfig":"92"},{"size":7713,"mtime":1612985011599,"results":"117","hashOfConfig":"92"},{"size":2679,"mtime":1613161174426,"results":"118","hashOfConfig":"92"},{"size":3492,"mtime":1614221075336,"results":"119","hashOfConfig":"92"},{"size":293,"mtime":1613161451384,"results":"120","hashOfConfig":"92"},{"size":6101,"mtime":1618782522742,"results":"121","hashOfConfig":"92"},{"size":18262,"mtime":1618783021599,"results":"122","hashOfConfig":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},"8fog4d",{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"125"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"125"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"125"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"125"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"125"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"125"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"125"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"125"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"125"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"125"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"125"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},"kynvdp",{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"195"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"195"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"195"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"195"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"195"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"195"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"195"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"195"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"195"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"195"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"195"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"195"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"195"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"195"},"C:\\xampp8\\htdocs\\apparelisland\\client\\src\\index.js",[],["269","270"],"C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\App.js",["271"],"import React, { useContext } from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\nimport { Context } from \"./Store\";\r\n\r\n\r\nimport Order from \"./Order\";\r\nimport Login from \"./Login\";\r\nimport Dashboard from \"./Dashboard\";\r\n\r\n\r\nexport default _ => {\r\n\r\n   const [state] = useContext(Context);\r\n   return (\r\n      <Router>\r\n         <div className=\"flex flex-col h-screen overflow-y-hidden bg-gray-700\">\r\n            <div className=\"p-6 text-2xl font-semibold text-white bg-gray-800 border-b-2 border-gray-900\">\r\n               {state.title} \r\n            </div>\r\n            <Routes>\r\n               <Route path=\"/\" element={<Login />} />\r\n               <Route path=\"/logout\" element={<Login />} />\r\n                <Route\r\n                  path=\"order/:id/*\"\r\n                  element={<Order name=\"Tracking\" />}\r\n               />\r\n               <Route path=\"dashboard/*\" element={<Dashboard />} />\r\n            </Routes>\r\n         </div>\r\n      </Router>\r\n   );\r\n};\r\n","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Store.js",[],"C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Order.js",["272","273","274","275","276","277","278","279","280","281"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Routes, Route, useParams, useNavigate, Link } from \"react-router-dom\";\r\nimport axios from '../actions/axios';\r\n\r\nimport { Context } from \"./Store\";\r\nimport {\r\n  USER_LOADING,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  GET_ERRORS,\r\n} from '../actions/types';\r\nimport TimelineItem from \"./TimelineItem\";\r\nimport NavItem from \"./NavItem\";\r\nimport Chat from \"./Chat\";\r\nimport Forum from \"./Forum\";\r\n\r\nimport chatIcon from \"../assets/icons/discussion.svg\";\r\nimport forumIcon from \"../assets/icons/phases.svg\";\r\n\r\n\r\nexport default (props) => {\r\n\r\n   const navigate = useNavigate();\r\n   const [state, dispatch] = useContext(Context);\r\n\r\n   const returnErrors = (msg, status, id = null) => {\r\n      return {\r\n         type: GET_ERRORS,\r\n         payload: { msg, status, id }\r\n      };\r\n   };\r\n\r\n   const tokenConfig = (state) => {\r\n      // Get token from localstorage\r\n      const token = state.auth.token;\r\n\r\n      // Headers\r\n      const config = {\r\n         headers: {\r\n            'Content-type': 'application/json'\r\n         }\r\n      };\r\n\r\n      if (token) {\r\n         config.headers['x-auth-token'] = token;\r\n      }\r\n\r\n      return config;\r\n   };\r\n   //authenticate user\r\n   useEffect(() => {\r\n\r\n\r\n      dispatch({ type: USER_LOADING });\r\n\r\n      axios\r\n         .get('/auth/user', tokenConfig(state))\r\n         .then(res => {\r\n            dispatch({\r\n               type: USER_LOADED,\r\n               payload: res.data\r\n            })\r\n         })\r\n         .catch((err) => {\r\n            dispatch(returnErrors(err.response.data, err.response.status));\r\n            dispatch({\r\n               type: AUTH_ERROR\r\n            });\r\n         });\r\n\r\n   }, []);\r\n\r\n   //on authenticate state change\r\n   useEffect(() => {\r\n      if (state.auth.isAuthenticated === false) {\r\n         navigate('/logout')\r\n      }\r\n   }, [state]);\r\n\r\n   const { id } = useParams();\r\n   const [phase, setPhase] = useState(0);\r\n   const [order, setOrder] = useState([]);\r\n   const [tab, setTab] = useState(0);\r\n\r\n   const completePhase = (i) => {\r\n      let phases = [...order.phases];\r\n      if (phases[i].nested) {\r\n         if (phases[i].nested.length > 0) {\r\n            for (var x = 0; x < phases[i].nested.length; x++) {\r\n               if (phases[i].nested[x].state != \"completed\") {\r\n                  alert('You must complete sub phases first');\r\n                  return;\r\n               }\r\n            }\r\n         }\r\n      }\r\n      let allowComplete = true;\r\n      if (i > 0) {\r\n         for (var start = 0; start < i; start++) {\r\n            if (phases[start].state != \"completed\") {\r\n               allowComplete = false;\r\n            }\r\n         }\r\n      }\r\n\r\n      if (allowComplete) {\r\n         phases[i].state = \"completed\";\r\n         setOrder({ ...order, phases: phases });\r\n      } else {\r\n         alert('Cannot mark complete before previous one');\r\n      }\r\n\r\n   }\r\n\r\n   const completeNestedPhase = (i, j) => {\r\n      let phases = [...order.phases];\r\n     \r\n      for (var x = 0; x < i; x++) {\r\n         if (phases[x].state != \"completed\") {\r\n            alert('Cannot mark complete before previous one 1');\r\n\r\n         }\r\n      }\r\n      let allowComplete = true;\r\n      if (j > 0) {\r\n         for (var start = 0; start < j; start++) {\r\n            if (phases[i].nested[start].state != \"completed\") {\r\n               allowComplete = false;\r\n               break;\r\n            }\r\n         }\r\n      }\r\n      if (allowComplete) {\r\n         phases[i].nested[j].state = \"completed\";\r\n         if (j == phases[i].nested.length - 1) {\r\n            phases[i].state = \"completed\";\r\n         }\r\n         setOrder({ ...order, phases: phases });\r\n      } else {\r\n         alert('Cannot mark complete before previous one 2');\r\n      }\r\n\r\n   };\r\n\r\n   //on order update\r\n   useEffect(() => {\r\n      \r\n      if (order.phases) {\r\n\r\n         var active_phase = order.phases.findIndex(phase => phase.state === \"active\");\r\n         if (active_phase >= 0)\r\n            setPhase(active_phase);\r\n\r\n         axios.post(`/order/update/${id}`, order).then(\r\n            (response) => {\r\n               console.log('updated', response.data);\r\n            }\r\n         );\r\n      }\r\n   }, [order])\r\n   //load order\r\n   useEffect(_ => {\r\n\r\n      axios.get(`/order/find/${id}`).then(\r\n         (response) => {\r\n            console.log('order', response.data);\r\n            setOrder(response.data);\r\n         }\r\n      );\r\n      dispatch({\r\n         type: \"SET_TITLE\",\r\n         payload: `Orders / ${props.name}`,\r\n      });\r\n   }, []);\r\n\r\n   return (\r\n      <div className=\"flex flex-1 mt-6 overflow-y-auto bg-gray-700\">\r\n         <div className=\"-mr-3 bg-gray-700\">\r\n            <div className=\"flex flex-col h-full overflow-y-scroll\">\r\n               <Link to='/dashboard'  className=\"mr-auto ml-auto bg-gray-500 text-white p-2 rounded-md\">Go Back</Link>\r\n               {order.phases && order.phases.map((phase, index) => (\r\n                  <TimelineItem\r\n                     title={phase.title}\r\n                     last={index === order.phases.length - 1}\r\n                     state={phase.state}\r\n                     setPhase={  _ => {\r\n                        dispatch({\r\n                           type: \"SET_TITLE\",\r\n                           payload: `Orders / ${props.name} / ${phase.title}`,\r\n                        });\r\n                        setPhase(index);\r\n                     }}\r\n                     completePhase={ _ => { completePhase(index) }}\r\n                     active={phase === order.phases.length - index - 1}\r\n                     nested={phase.nested}\r\n                     completeNestedPhase={(i) => {\r\n                        completeNestedPhase(index, i);\r\n                     }}\r\n                  />\r\n               ))}\r\n            </div>\r\n         </div>\r\n         <div className=\"flex flex-col flex-1 pb-4 mr-6 bg-white gap-y-2 rounded-t-xl\">\r\n            <nav className=\"flex items-center bg-gray-100 rounded-t-xl\">\r\n               <NavItem\r\n                  label=\"Chat\"\r\n                  active={!tab}\r\n                  src={chatIcon}\r\n                  onClick={_ => setTab(0)}\r\n                  path=\"\"\r\n               />\r\n               <NavItem\r\n                  label=\"Forum\"\r\n                  src={forumIcon}\r\n                  active={tab}\r\n                  onClick={_ => setTab(1)}\r\n                  path=\"forum\"\r\n               />\r\n            </nav>\r\n            <Routes>\r\n               <Route path=\"/\" element={order.phases && order.phases.length > 0 && <Chat order_id={id} phase={phase} />} />\r\n               <Route path=\"forum\" element={<Forum order_id={id} />} />\r\n            </Routes>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Login.js",["282","283","284"],"import { useState, useEffect, useContext } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport axios from '../actions/axios';\r\n\r\nimport { Context } from \"./Store\";\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  GET_ERRORS, CLEAR_ERRORS\r\n} from '../actions/types';\r\n\r\nexport default _ => {\r\n\r\n   \r\n   const [email, setEmail] = useState('');\r\n   const [password, setPassword] = useState('');\r\n   const navigate = useNavigate();\r\n\r\n   const [state, dispatch] = useContext(Context);\r\n\r\n   const returnErrors = (msg, status, id = null) => {\r\n      return {\r\n        type: GET_ERRORS,\r\n        payload: { msg, status, id }\r\n      };\r\n    };\r\n\r\n   const handleOnSubmit = (e) => {\r\n\r\n      e.preventDefault();\r\n      dispatch({ type: CLEAR_ERRORS });\r\n\r\n      // Headers\r\n      const config = {\r\n         headers: {\r\n            'Content-Type': 'application/json'\r\n         }\r\n      };\r\n\r\n      // Request body\r\n      const body = JSON.stringify({ email, password });\r\n\r\n      axios\r\n         .post('/auth', body, config)\r\n         .then(res =>\r\n            dispatch({\r\n               type: LOGIN_SUCCESS,\r\n               payload: res.data\r\n            })\r\n         )\r\n         .catch(err => {\r\n            dispatch(\r\n               returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL')\r\n            );\r\n            dispatch({\r\n               type: LOGIN_FAIL\r\n            });\r\n         });\r\n      // const user = { email, password };\r\n      // login(user);\r\n   };\r\n\r\n\r\n\r\n   useEffect(() => {\r\n      console.log('state changed' , state);\r\n      if(state.auth.isAuthenticated){\r\n         navigate('/dashboard');\r\n      }\r\n   }, [state]);\r\n\r\n   useEffect(_ => {\r\n      dispatch({\r\n         type: \"SET_TITLE\",\r\n         payload: `Login`,\r\n      });\r\n   }, []);\r\n   return (\r\n      <div className=\"flex items-center justify-center h-full bg-gray-50\">\r\n         <div className=\"min-h-screen md:w-1/3 flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n            <div className=\" w-full space-y-8\">\r\n               <div>\r\n                  <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n                     Sign in\r\n                  </h2>\r\n               </div>\r\n               <form className=\"mt-8 space-y-6\" onSubmit={handleOnSubmit} action=\"#\" method=\"POST\">\r\n                  <input type=\"hidden\" name=\"remember\" value=\"true\" />\r\n                  {state.error.status && <div className=\"mt-2 mb-2\">\r\n                     <p style={{color:\"red\"}}>{state.error.msg.message}</p>\r\n                  </div>}\r\n                  <div className=\"rounded-md shadow-sm -space-y-px\">\r\n                     <div>\r\n                        <label htmlFor=\"email\" className=\"sr-only\">\r\n                           Email\r\n                        </label>\r\n                        <input\r\n                           id=\"email\"\r\n                           name=\"email\"\r\n                           type=\"email\"\r\n                           value={email}\r\n                           onChange={(e) => setEmail(e.target.value)}\r\n                           required\r\n                           className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                           placeholder=\"Email address\"\r\n                        />\r\n                     </div>\r\n                     <div>\r\n                        <label htmlFor=\"password\" className=\"sr-only\">\r\n                           Password\r\n                        </label>\r\n                        <input\r\n                           id=\"password\"\r\n                           name=\"password\"\r\n                           type=\"password\"\r\n                           value={password}\r\n                           onChange={(e) => setPassword(e.target.value)}\r\n                           autocomplete=\"current-password\"\r\n                           required\r\n                           className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                           placeholder=\"Password\"\r\n                        />\r\n                     </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex flex-col items-center justify-between\">\r\n                     <div className=\"flex items-center\">\r\n                        <input\r\n                           id=\"remember_me\"\r\n                           name=\"remember_me\"\r\n                           type=\"checkbox\"\r\n                           className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\r\n                        />\r\n                        <label\r\n                           htmlFor=\"remember_me\"\r\n                           className=\"ml-2 block text-sm text-gray-900\"\r\n                        >\r\n                           Remember me\r\n                        </label>\r\n                     </div>\r\n\r\n                     <div className=\"text-sm\">\r\n                        <a\r\n                           href=\"##\"\r\n                           className=\"font-medium text-indigo-600 hover:text-indigo-500\"\r\n                        >\r\n                           Forgot your password?\r\n                        </a>\r\n                     </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                     <button\r\n                        type=\"submit\"\r\n                        className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                     >\r\n                        <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\r\n                           <svg\r\n                              className=\"h-5 w-5 text-indigo-500 group-hover:text-indigo-400\"\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              viewBox=\"0 0 20 20\"\r\n                              fill-rule=\"currentColor\"\r\n                              aria-hidden=\"true\"\r\n                           >\r\n                              <path\r\n                                 fill-rule=\"evenodd\"\r\n                                 d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\"\r\n                                 clipRule=\"evenodd\"\r\n                              />\r\n                           </svg>\r\n                        </span>\r\n                        Sign in\r\n                     </button>\r\n                  </div>\r\n               </form>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Dashboard.js",["285","286","287","288"],"import React, { useContext, useEffect } from \"react\";\r\nimport axios from '../actions/axios';\r\n\r\nimport { Context } from \"./Store\";\r\nimport {\r\n  USER_LOADING,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  GET_ERRORS,\r\n  LOGOUT_SUCCESS,\r\n} from '../actions/types';\r\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\r\n\r\nimport Sidebar from \"./Sidebar\";\r\nimport HeaderStats from \"./HeaderStats\";\r\nimport DashboardMain from \"./DashboardMain\";\r\nimport DashboardOrder from \"./DashboardOrder\";\r\nimport DashboardOrderCreate from \"./DashboardOrderCreate\";\r\nimport DashboardDepartmentCreate from \"./DashboardDepartmentCreate\";\r\nimport DashboardDepartment from \"./DashboardDepartment\";\r\n\r\n\r\nexport default () => {\r\n\r\n   const navigate = useNavigate();\r\n   const [state, dispatch] = useContext(Context);\r\n\r\n   const returnErrors = (msg, status, id = null) => {\r\n      return {\r\n        type: GET_ERRORS,\r\n        payload: { msg, status, id }\r\n      };\r\n   };\r\n   \r\n   const tokenConfig = (state) => {\r\n      // Get token from localstorage\r\n      const token = state.auth.token;\r\n   \r\n      // Headers\r\n      const config = {\r\n         headers: {\r\n         'Content-type': 'application/json'\r\n         }\r\n      };\r\n      \r\n      if (token) {\r\n         config.headers['x-auth-token'] = token;\r\n      }\r\n   \r\n      return config;\r\n   };\r\n   //authenticate user\r\n   useEffect(() => {\r\n      \r\n      \r\n      dispatch({ type: USER_LOADING });\r\n    \r\n      axios\r\n        .get('/auth/user', tokenConfig(state))\r\n        .then(res => {\r\n          dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n          })\r\n        })\r\n        .catch((err) => {\r\n          dispatch(returnErrors(err.response.data, err.response.status));\r\n          dispatch({\r\n            type: AUTH_ERROR\r\n          });\r\n        });\r\n      \r\n   }, []);\r\n\r\n   //on authenticate state change\r\n   useEffect(() => {\r\n      if(state.auth.isAuthenticated === false){\r\n         navigate('/logout')\r\n      }\r\n   }, [state]);\r\n   \r\n   //logout\r\n   const logout = () => {\r\n      dispatch({\r\n         type: LOGOUT_SUCCESS\r\n      });\r\n   }\r\n\r\n   \r\n   useEffect(_ => {\r\n      dispatch({\r\n         type: \"SET_TITLE\",\r\n         payload: `Dashboard`,\r\n      });\r\n   }, []);\r\n\r\n\r\n   return (\r\n      <div className=\"relative h-full overflow-y-auto bg-gray-200 md:ml-64\">\r\n         <Sidebar logout={logout}/>\r\n         <HeaderStats />\r\n         <Routes>\r\n            <Route path=\"/\" element={<DashboardMain />} />\r\n            <Route path=\"orders\" element={<DashboardOrder />} />\r\n            <Route path=\"departments\" element={<DashboardDepartment />} />\r\n            <Route path=\"departments/create\" element = {<DashboardDepartmentCreate />} />\r\n            <Route path = \"orders/create\" element = {<DashboardOrderCreate />} />\r\n         </Routes>\r\n      </div>\r\n   );\r\n};\r\n","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\actions\\types.js",[],"C:\\xampp8\\htdocs\\apparelisland\\client\\src\\actions\\axios.js",[],"C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\NavItem.js",[],"C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\TimelineItem.js",[],"C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Chat.js",["289","290","291","292","293"],"import React, { useState, useEffect } from \"react\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport image from \"../assets/icons/image.svg\";\r\nimport send from \"../assets/icons/send.svg\";\r\nimport Pusher from 'pusher-js';\r\nimport axios from \"../actions/axios\";\r\nimport hdate from 'human-date';\r\nimport fs from 'fs';\r\n\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowArrowFunction\": true}] */\r\nexport default ({ order_id, phase }) => {\r\n\r\n\r\n   \r\n   const [messages, setMessages] = useState([]);\r\n   \r\n   const [input, setInput] = useState('');\r\n\r\n\r\n\r\n   const sendMessage = async (e) => {\r\n\r\n      e.preventDefault();\r\n      let allowSend = false;\r\n      if(input.trim()!=''){\r\n         allowSend = true;\r\n      }\r\n      let formData = new FormData();\r\n\r\n      let array = document.getElementById('file').files;\r\n\r\n      if(array.length > 0){\r\n         for(var i=0;i<array.length;i++){   \r\n            console.log('appending',array[i]);  \r\n            allowSend = true;    \r\n            formData.append(\"files\" , array[i]);\r\n         }\r\n      }\r\n\r\n      var d = new Date();\r\n      \r\n\r\n\r\n      \r\n      formData.append(\"sender\", \"Dummy User\");\r\n      formData.append(\"time\" , d.getTime());\r\n      formData.append(\"content\",input);\r\n      formData.append(\"order\",order_id);\r\n      formData.append(\"phase\",phase);\r\n      if(allowSend){\r\n      \r\n         await axios.post('/chat/new', formData, {\r\n            headers: {\r\n               'Content-Type': 'multipart/form-data'\r\n            }\r\n         });\r\n\r\n      }else{\r\n         alert('wtf');\r\n      }\r\n\r\n      setInput('');\r\n   };\r\n\r\n   useEffect(() => {\r\n      \r\n      axios.get('/chat/sync/'+order_id).then(\r\n         (msgs) => {\r\n            let arr = msgs.data.reduce( (r,a) => {\r\n               r[a.phase] = r[a.phase] || [];\r\n               r[a.phase].push(a);\r\n               return r;\r\n            }, Object.create(null));   \r\n            setMessages(arr);\r\n         }\r\n      );\r\n\r\n   }, [])\r\n\r\n   useEffect(() => {\r\n      const pusher = new Pusher('529cf8119f342b5e04b2', {\r\n         cluster: 'ap2'\r\n      });\r\n   \r\n      const channel = pusher.subscribe('messages');\r\n      channel.bind('inserted', function(data) {\r\n         if(messages[phase]){\r\n            setMessages({ ...messages ,  [phase]: [ data,...messages[phase] ] });\r\n         }            \r\n      });\r\n      return () => {\r\n         channel.unbind_all();\r\n         channel.unsubscribe();\r\n      }\r\n   }, [messages,phase])\r\n\r\n   useEffect(() => {\r\n      console.log('messages' , messages[phase], phase);\r\n   }, [messages])\r\n\r\n   useEffect(() => {\r\n      if(!messages[phase]){\r\n         messages[phase] = [];\r\n      }      \r\n   }, [phase])\r\n\r\n   \r\n   \r\n\r\n   return (\r\n      <React.Fragment>\r\n         <div className=\"flex flex-col-reverse flex-1 overflow-y-auto\">\r\n            \r\n            {messages[phase] && messages[phase].length>0 && messages[phase].map(message => (\r\n               <div className=\"flex px-4 py-3 gap-x-4 hover:bg-gray-100 hover:shadow\">\r\n                  <div className=\"flex justify-center\">\r\n                     <img\r\n                        src={\r\n                           \"https://images.unsplash.com/photo-1603415526960-f7e0328c63b1?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80\"\r\n                        }\r\n                        alt=\"pic\"\r\n                        className=\"w-8 h-8 bg-gray-200 rounded-full\"\r\n                     />\r\n                  </div>\r\n                  <div className=\"flex flex-col\">\r\n                     <div className=\"flex items-center gap-x-3\">\r\n                        <h1 className=\"text-lg font-semibold\">\r\n                           {message.sender}\r\n                        </h1>\r\n                        <span className=\"-mb-1 text-sm text-gray-400\">\r\n                           {hdate.relativeTime(message.time)}\r\n                        </span>\r\n                     </div>\r\n                     {message.content}\r\n                     <div className=\"flex flex-wrap gap-2 py-2\">\r\n                        {message.images.map(image => (\r\n                           <img\r\n                              src={`http://localhost:9000/${image}`}\r\n                              alt=\"img\"\r\n                              className=\"w-24 h-24 rounded-sm\"\r\n                           />\r\n                        ))}\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            ))}\r\n         </div>\r\n         <div className=\"relative mx-4\">\r\n            <form method=\"POST\" onSubmit={sendMessage} >\r\n               <input type=\"text\" value={input} onChange={(e)=>{setInput(e.target.value)}}\r\n                  className=\"w-full py-4 pl-16 pr-12 text-gray-800 bg-gray-200 rounded-sm focus:outline-none focus:bg-white focus:ring-2 ring-gray-500\">\r\n               </input>\r\n               <button type=\"submit\" className=\"absolute top-0 right-0 mt-3 mr-4 text-gray-500 hover:text-indigo-600 focus:outline-none focus:text-indigo-600\">\r\n                  <SVG src={send} className=\"w-8 h-8 fill-current\" />\r\n               </button>\r\n            </form>\r\n            <div className=\"group\">\r\n               <input type=\"file\" multiple id=\"file\" className=\"hidden\" />\r\n               <button onClick={ () => document.getElementById('file').click() }className=\"absolute top-0 left-0 z-10 mt-3 ml-3 text-gray-500 group-hover:text-white focus:outline-none focus:text-gray-800\">\r\n                  <SVG src={image} className=\"w-8 h-8 fill-current \" />\r\n               </button>\r\n               <div className=\"absolute top-0 left-0 h-full rounded-l-sm group-hover:bg-gray-500 w-14\" />\r\n            </div>\r\n         </div>\r\n      </React.Fragment>\r\n   );\r\n};\r\n","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Sidebar.js",[],"C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Forum.js",["294","295"],"import React, { useState,useEffect,useContext } from \"react\";\r\nimport { Context } from \"./Store\";\r\nimport axios from \"../actions/axios\";\r\nimport Modal from \"./Modal\";\r\nimport ForumModal from \"./ForumModal\";\r\n\r\nimport { useModal } from \"../hooks/useModal\";\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowArrowFunction\": true}] */\r\nexport default ({order_id}) => {\r\n\r\n\r\n   const [modalOpen, toggleModal] = useModal();\r\n   const [isAdmin, setIsAdmin] = useState(false);\r\n   const [state, dispatch] = useContext(Context);\r\n\r\n   const [forums, setForums] = useState([]);\r\n\r\n   const checkAdmin = _ => {\r\n      if(state.auth){\r\n         if(state.auth.user){\r\n            if(state.auth.user.isAdmin === true){\r\n               setIsAdmin(true);\r\n            }\r\n         }\r\n      }\r\n      setIsAdmin(false);\r\n   }\r\n\r\n   useEffect(() => {\r\n      \r\n      axios.get('/forum/sync').then(\r\n         (res) => {\r\n            setForums(res.data);\r\n         }\r\n      ).catch(err => {\r\n         console.log('cannot get forums' , err);\r\n      })\r\n\r\n   }, [])\r\n\r\n   const addForum = (payload) => {\r\n\r\n      axios.post('/forum/new', payload).then((res) => {\r\n         toggleModal();\r\n      }).catch(err => {\r\n         console.log('could not create forum',err);\r\n      });\r\n      \r\n   }\r\n\r\n   useEffect(() => {\r\n      checkAdmin();\r\n   }, [state])\r\n   return (\r\n      <>\r\n      <Modal\r\n         title='Post a thread'\r\n         isActive={modalOpen}\r\n         handleClose={_ => {\r\n            toggleModal();\r\n         }}\r\n      >\r\n         <ForumModal addForum={(payload) => addForum(payload)} />\r\n      </Modal>\r\n      <button onClick={toggleModal} className=\"w-full py-2 bg-purple-500 text-white font-bold hover:bg-purple-700\">Post Thread</button>\r\n      <div className=\"flex flex-col-reverse flex-1 overflow-y-auto\">\r\n         {forums.map(forum => (\r\n            <div className=\"flex flex-col p-4 cursor-pointer bg-gray-50 hover:shadow hover:bg-gray-100\">\r\n               <dix className=\"flex gap-x-2\">\r\n                  <img\r\n                     alt=\"profile\"\r\n                     src=\"https://images.unsplash.com/photo-1603415526960-f7e0328c63b1?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80\"\r\n                     className=\"w-10 h-10 bg-gray-200 rounded-full\"\r\n                  />\r\n                  <div className=\"flex flex-col flex-1\">\r\n                     <h1 className=\"font-semibold\">{forum.sender}</h1>\r\n                     <p className=\"text-sm text-gray-400\">{forum.sent}</p>\r\n                  </div>\r\n                  <div className=\"flex items-center h-6 px-2 pb-1 mr-8 text-white bg-yellow-500 rounded-xl\">\r\n                     {forum.status} {isAdmin && <p>testing</p>}\r\n                  </div>\r\n                  {isAdmin && <><div className=\"flex items-center h-6 px-2 pb-1 mr-8 text-white bg-blue-500\">\r\n                     Marks as Resolved\r\n                  </div>\r\n                  <div className=\"flex items-center h-6 px-2 pb-1 mr-8 text-white bg-red-500\">\r\n                     Marks as Closed\r\n                  </div></>}\r\n               </dix>\r\n               <div className=\"h-12 mt-2 overflow-hidden overflow-ellipsis\">\r\n                  {forum.content}\r\n               </div>\r\n            </div>\r\n         ))}\r\n      </div>\r\n      </>\r\n   );\r\n};\r\n","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\HeaderStats.js",[],"C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\DashboardMain.js",["296","297","298","299"],"import React, { useContext, useEffect } from \"react\";\r\nimport { Context } from \"./Store\";\r\nimport CardLineChart from \"./Cards/CardLineChart.js\";\r\nimport CardBarChart from \"./Cards/CardBarChart.js\";\r\nimport CardPageVisits from \"./Cards/CardPageVisits.js\";\r\nimport CardSocialTraffic from \"./Cards/CardSocialTraffic.js\";\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowArrowFunction\": true}] */\r\nexport default props => {\r\n   const [state, dispatch] = useContext(Context);\r\n   useEffect(_ => {\r\n      dispatch({\r\n         type: \"SET_TITLE\",\r\n         payload: `Dashboard`,\r\n      });\r\n   }, []);\r\n   return (\r\n      <div className=\"w-full px-4 mx-auto -m-16 md:px-10\">\r\n         <div className=\"flex flex-wrap\">\r\n            <div className=\"w-full px-4 mb-12 xl:w-8/12 xl:mb-0\">\r\n               <CardLineChart />\r\n            </div>\r\n            <div className=\"w-full px-4 xl:w-4/12\">\r\n               <CardBarChart />\r\n            </div>\r\n         </div>\r\n         {/* <div className=\"flex flex-wrap mt-4\">\r\n            <div className=\"w-full px-4 mb-12 xl:w-8/12 xl:mb-0\">\r\n               <CardPageVisits />\r\n            </div>\r\n            <div className=\"w-full px-4 xl:w-4/12\">\r\n               <CardSocialTraffic />\r\n            </div>\r\n         </div> */}\r\n      </div>\r\n   );\r\n};\r\n","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\DashboardOrder.js",["300","301","302"],"import { useEffect, useContext, useState } from \"react\";\r\nimport { Context } from \"./Store\";\r\nimport axios from \"../actions/axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default () => {\r\n\r\n   const [orders, setOrders] = useState([]);\r\n\r\n   const [state,dispatch] = useContext(Context);\r\n\r\n   const loadOrders = async () => {\r\n      axios.get('/order/sync').then(\r\n         (response) => {\r\n            setOrders(response.data);\r\n         }\r\n      );\r\n   };\r\n\r\n   const editOrder = async (order) => {\r\n      console.log('edit order', order);\r\n   }\r\n\r\n   const deleteOrder = async (order) => {\r\n      console.log('delete order', order);\r\n   }\r\n\r\n   useEffect(_ => {\r\n      dispatch({\r\n         type: \"SET_TITLE\",\r\n         payload: `Dashboard / Orders`,\r\n      });\r\n      loadOrders();\r\n   }, []);\r\n\r\n   return (\r\n\r\n      <div className=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded\">\r\n         <div className=\"rounded-t mb-0 px-4 py-3 border-0\">\r\n            <div className=\"flex flex-wrap items-center\">\r\n               <div className=\"relative w-full px-4 max-w-full flex-grow flex-1\">\r\n                  <h3 className=\"font-semibold text-base text-gray-800\">\r\n                     Orders\r\n        </h3>\r\n               </div>\r\n               <div className=\"relative w-full px-4 max-w-full flex-grow flex-1 text-right\">\r\n                  <Link\r\n                     to=\"/order/create\"\r\n                     className=\"bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                     type=\"button\"\r\n                  >\r\n                     Create New\r\n            </Link>\r\n               </div>\r\n            </div>\r\n         </div>\r\n         <div className=\"block w-full overflow-x-auto\">\r\n\r\n            <table className=\"items-center w-full bg-transparent border-collapse\">\r\n               <thead>\r\n                  <tr>\r\n                     <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                        #\r\n                </th>\r\n                     <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                        Brand\r\n                </th>\r\n                     <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                        Customer Name\r\n                </th>\r\n                     <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                        Country\r\n                </th>\r\n                     <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                        Quantity\r\n                </th>\r\n                     <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                        Product\r\n                </th>\r\n                     <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                        Actions\r\n                </th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {orders.length > 0 && orders.map((order, index) =>\r\n                     <tr key={index}>\r\n                        <th className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-left\">\r\n                           {index + 1}\r\n                        </th>\r\n                        <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n                           {order.brandName}\r\n                        </td>\r\n                        <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n                           {order.customerName}\r\n                        </td>\r\n                        <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n                           {order.country}\r\n                        </td>\r\n                        <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n                           {order.quantity}\r\n                        </td>\r\n                        <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n                           {order.product}\r\n                        </td>\r\n                        <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n\r\n                           <button\r\n                              className=\"bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                              type=\"button\"\r\n                              onClick={() => editOrder(order)}\r\n                           >\r\n                              Edit\r\n                        </button>\r\n\r\n                           <button\r\n                              className=\"bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                              type=\"button\"\r\n                              onClick={() => deleteOrder(order)}\r\n                           >\r\n                              Delete\r\n                        </button>\r\n                           <Link\r\n                              to={`/order/${order._id}`}\r\n                              className=\"bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                           >\r\n                              Track Order\r\n                        </Link>\r\n\r\n                        </td>\r\n                     </tr>\r\n                  )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n      </div>\r\n\r\n   );\r\n};\r\n","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\DashboardOrderCreate.js",["303","304"],"import { useEffect, useContext, useState } from \"react\";\r\nimport { Context } from \"./Store\";\r\nimport axios from \"../actions/axios\";\r\n\r\n\r\n\r\nconst DashboardOrderCreate = () => {\r\n\r\n   const [ brand,setBrand] = useState('');\r\n   const [ quantity,setQuantity] = useState('');\r\n   const [product,setProduct] = useState('');\r\n   const [country,setCountry] = useState('');\r\n   const [customerName,setCustomerName] = useState('');\r\n\r\n   const addOrder = async (e) => {\r\n      e.preventDefault();\r\n      await axios.post('/order/new', {\r\n         brandName: brand,\r\n         customerName: customerName,\r\n         country: country,\r\n         quantity: quantity,\r\n         product: product\r\n      }).then((res) => {\r\n         console.log('sent',res);\r\n      });\r\n\r\n   };\r\n\r\n\r\n   const [state, dispatch] = useContext(Context);\r\n   useEffect(_ => {\r\n      dispatch({\r\n         type: \"SET_TITLE\",\r\n         payload: `Dashboard / Orders / Create`,\r\n      });\r\n   }, []);\r\n   return (\r\n      <div class=\"mt-10 sm:mt-0\">\r\n         <div class=\"sm: px-10 md:px-20 lg:px-40 xl:px-64 py-10\">\r\n            <div class=\"mt-5 md:mt-0 md:col-span-2\">\r\n               <form onSubmit={addOrder} method=\"POST\">\r\n                  <div class=\"shadow overflow-hidden w-full sm:rounded-md\">\r\n                     <div class=\"px-4 py-5 bg-white sm:p-6\">\r\n                        <div class=\"grid grid-cols-6 gap-6\">\r\n                           <div class=\"col-span-6 sm:col-span-4\">\r\n                              <label\r\n                                 for=\"Brand name\"\r\n                                 class=\"block text-sm font-medium text-gray-700\"\r\n                              >\r\n                                 Brand name\r\n                              </label>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name=\"brand_name\"\r\n                                 id=\"brand_name\"\r\n                                 value={brand}\r\n                                 onChange={(e) => setBrand(e.target.value)}\r\n                                 autocomplete=\"brand_name\"\r\n                                 class=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                              />\r\n                           </div>\r\n                           <div class=\"col-span-6 sm:col-span-4\">\r\n                              <label\r\n                                 for=\"Customer name\"\r\n                                 class=\"block text-sm font-medium text-gray-700\"\r\n                              >\r\n                                 Customer name\r\n                              </label>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name=\"customer_name\"\r\n                                 id=\"customer_name\"\r\n                                 value={customerName}\r\n                                 onChange={(e) => {setCustomerName(e.target.value)}}\r\n                                 autocomplete=\"customer_name\"\r\n                                 class=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                              />\r\n                           </div>\r\n                           <div class=\"col-span-6 sm:col-span-3\">\r\n                              <label\r\n                                 for=\"country\"\r\n                                 class=\"block text-sm font-medium text-gray-700\"\r\n                              >\r\n                                 Country / Region\r\n                              </label>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name=\"country\"\r\n                                 id=\"country\"\r\n                                 value={country}\r\n                                 onChange={(e) => {setCountry(e.target.value)}}\r\n                                 autocomplete=\"customer_name\"\r\n                                 class=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                              />\r\n                           </div>\r\n\r\n                           <div class=\"col-span-6 sm:col-span-3 lg:col-span-2\">\r\n                              <label\r\n                                 for=\"quantity\"\r\n                                 class=\"block text-sm font-medium text-gray-700\"\r\n                              >\r\n                                 Quantity\r\n                              </label>\r\n                              <input\r\n                                 type=\"number\"\r\n                                 name=\"quantity\"\r\n                                 value={quantity}\r\n                                 onChange={(e) => {setQuantity(e.target.value)}}\r\n                                 id=\"quantity\"\r\n                                 class=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                              />\r\n                           </div>\r\n\r\n                           <div class=\"col-span-6 sm:col-span-3 lg:col-span-2\">\r\n                              <label\r\n                                 for=\"Product type\"\r\n                                 class=\"block text-sm font-medium text-gray-700\"\r\n                              >\r\n                                 Product\r\n                              </label>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name=\"Product type\"\r\n                                 id=\"Product type\"\r\n                                 value={product}\r\n                                 onChange={(e)=>{setProduct(e.target.value)}}\r\n                                 class=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                              />\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n                     <div class=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\r\n                        <button\r\n                           type=\"submit\"\r\n                           class=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-pink-600 hover:bg-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500\"\r\n                        >\r\n                           Create\r\n                        </button>\r\n                     </div>\r\n                  </div>\r\n               </form>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default DashboardOrderCreate;","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\DashboardDepartmentCreate.js",["305","306","307","308"],"import { useEffect, useContext, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { Context } from \"./Store\";\r\nimport axios from \"../actions/axios\";\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowArrowFunction\": true}] */\r\nexport default (props) => {\r\n\r\n   const [name,setName] = useState('');\r\n   const[description,setDescription] = useState('');\r\n\r\n   const addDepartment = async (e) => {\r\n      e.preventDefault();\r\n      await axios.post('/department/new', {\r\n         name:name,\r\n         description:description\r\n      }).then((res) => {\r\n         console.log('sent',res);\r\n      });\r\n\r\n   };\r\n\r\n   const [state, dispatch] = useContext(Context);\r\n   useEffect(_ => {\r\n      dispatch({\r\n         type: \"SET_TITLE\",\r\n         payload: `Dashboard / Departments / Create`,\r\n      });\r\n   }, []);\r\n   return (\r\n      <div class=\"mt-10 sm:mt-0\">\r\n         <div class=\"sm: px-10 md:px-20 lg:px-40 xl:px-64 py-10\">\r\n            <div class=\"mt-5 md:mt-0 md:col-span-2\">\r\n               <form onSubmit={addDepartment} method=\"POST\">\r\n                  <div class=\"shadow overflow-hidden w-full sm:rounded-md\">\r\n                     <div class=\"px-4 py-5 bg-white sm:p-6\">\r\n                        <div class=\"grid grid-cols-6 gap-6\">\r\n                           <div class=\"col-span-6 sm:col-span-4\">\r\n                              <label\r\n                                 for=\"Brand name\"\r\n                                 class=\"block text-sm font-medium text-gray-700\"\r\n                              >\r\n                                 Department name\r\n                              </label>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name=\"brand_name\"\r\n                                 id=\"brand_name\"\r\n                                 value={name}\r\n                                 onChange={(e)=>{setName(e.target.value)}}\r\n                                 autocomplete=\"brand_name\"\r\n                                 class=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                              />\r\n                           </div>\r\n                           <div class=\"col-span-6 sm:col-span-4\">\r\n                              <label\r\n                                 for=\"Customer name\"\r\n                                 class=\"block text-sm font-medium text-gray-700\"\r\n                              >\r\n                                 Department description\r\n                              </label>\r\n                              <textarea\r\n                                 type=\"text\"\r\n                                 name=\"customer_name\"\r\n                                 id=\"customer_name\"\r\n                                 value={description}\r\n                                 onChange={(e)=>{setDescription(e.target.value)}}\r\n                                 autocomplete=\"customer_name\"\r\n                                 class=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                              />\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n                     <div class=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\r\n                        <button\r\n                           type=\"submit\"\r\n                           class=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-pink-600 hover:bg-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500\"\r\n                        >\r\n                           Create\r\n                        </button>\r\n                     </div>\r\n                  </div>\r\n               </form>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\DashboardDepartment.js",["309","310","311"],"import { useEffect, useContext, useState } from \"react\";\r\nimport { Context } from \"./Store\";\r\nimport axios from \"../actions/axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default (props) => {\r\n\r\n   const [departments, setDepartments] = useState([]);\r\n\r\n   const [state, dispatch] = useContext(Context);\r\n\r\n   const loadDepartments = async () => {\r\n      axios.get('/department/sync').then(\r\n         (response) => {\r\n            setDepartments(response.data);\r\n         }\r\n      );\r\n   };\r\n\r\n   const editDepartment = async (department) => {\r\n      console.log('edit department', department);\r\n   }\r\n\r\n   const deleteDepartment = async (department) => {\r\n      console.log('delete department', department);\r\n   }\r\n\r\n   useEffect(_ => {\r\n      dispatch({\r\n         type: \"SET_TITLE\",\r\n         payload: `Dashboard / Orders`,\r\n      });\r\n      loadDepartments();\r\n   }, []);\r\n\r\n   return (\r\n      <div className=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded\">\r\n         <div className=\"rounded-t mb-0 px-4 py-3 border-0\">\r\n            <div className=\"flex flex-wrap items-center\">\r\n               <div className=\"relative w-full px-4 max-w-full flex-grow flex-1\">\r\n                  <h3 className=\"font-semibold text-base text-gray-800\">\r\n                     Departments\r\n            </h3>\r\n               </div>\r\n               <div className=\"relative w-full px-4 max-w-full flex-grow flex-1 text-right\">\r\n                  <Link\r\n                     to=\"/departments/create\"\r\n                     className=\"bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                     type=\"button\"\r\n                  >\r\n                     Create New\r\n                  </Link>\r\n               </div>\r\n            </div>\r\n         </div>\r\n         <div className=\"block w-full overflow-x-auto\">\r\n\r\n            <table className=\"items-center w-full bg-transparent border-collapse\">\r\n               <thead>\r\n                  <tr>\r\n                     <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                        #\r\n                    </th>\r\n                     <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                        Name\r\n                    </th>\r\n                     <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                        Description\r\n                    </th>\r\n                     <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                        Actions\r\n                    </th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {departments.length > 0 && departments.map((department, index) =>\r\n                     <tr key={index}>\r\n                        <th className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-left\">\r\n                           {index+1}\r\n                        </th>\r\n                        <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n                           {department.name}\r\n                        </td>\r\n                        <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n                           {department.description}\r\n                        </td>\r\n                        <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n\r\n                           <button\r\n                              className=\"bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                              type=\"button\"\r\n                              onClick={() => editDepartment(department)}\r\n                           >\r\n                              Edit\r\n                        </button>\r\n\r\n                           <button\r\n                              className=\"bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                              type=\"button\"\r\n                              onClick={() => deleteDepartment(department)}\r\n                           >\r\n                              Delete\r\n                        </button>\r\n\r\n                        </td>\r\n                     </tr>\r\n                  )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n","C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Dropdowns\\NotificationDropdown.js",[],"C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Dropdowns\\UserDropdown.js",[],"C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Cards\\CardStats.js",[],"C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Cards\\CardLineChart.js",[],"C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Cards\\CardBarChart.js",[],"C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Cards\\CardPageVisits.js",[],"C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Cards\\CardSocialTraffic.js",[],"C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\Modal.js",[],"C:\\xampp8\\htdocs\\apparelisland\\client\\src\\components\\ForumModal.js",[],"C:\\xampp8\\htdocs\\apparelisland\\client\\src\\hooks\\useModal.js",[],"C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\index.js",[],["312","313"],"C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\App.js",["314"],"C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Store.js",[],"C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Order.js",["315","316","317","318","319","320","321","322"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Routes, Route, useParams } from \"react-router-dom\";\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\r\nimport axios from '../actions/axios';\r\n\r\nimport { Context } from \"./Store\";\r\nimport TimelineItem from \"./TimelineItem\";\r\nimport NavItem from \"./NavItem\";\r\nimport Chat from \"./Chat\";\r\nimport Forum from \"./Forum\";\r\n\r\nimport chatIcon from \"../assets/icons/discussion.svg\";\r\nimport forumIcon from \"../assets/icons/phases.svg\";\r\n\r\n\r\n\r\n\r\nexport default (props) => {\r\n\r\n   \r\n   const [state, dispatch] = useContext(Context);\r\n\r\n\r\n   const { id } = useParams();\r\n   const [phase, setPhase] = useState(0);\r\n   const [order, setOrder] = useState([]);\r\n   const [tab, setTab] = useState(0);\r\n\r\n   const updateOrder = _ => {\r\n      axios.post(`/order/update/${id}`, { phases: order.phases }).then(\r\n         (response) => {\r\n            console.log('updated', response.data);\r\n         }\r\n      );\r\n   }\r\n   const phaseClicked = (i) => {\r\n      let phases = [...order.phases];\r\n      let setNested = \"-1\";\r\n\r\n      if (phases[i].state == \"pending\") {\r\n         phases[i].state = \"active\";\r\n         setNested = \"pending\";\r\n      } else if (phases[i].state === \"active\") {\r\n         phases[i].state = \"completed\";\r\n         setNested = \"completed\";\r\n      } else if (phases[i].state === \"completed\") {\r\n         phases[i].state = \"under_review\";\r\n         setNested = \"under_review\";\r\n      } else if (phases[i].state === \"under_review\") {\r\n         phases[i].state = \"completed\";\r\n         setNested = \"completed\";\r\n      }\r\n\r\n      if (setNested != \"-1\" && phases[i].nested) {\r\n         for (var x = 0; x < phases[i].nested.length; x++) {\r\n            phases[i].nested[x].state = setNested;\r\n         }\r\n      }\r\n\r\n      if (phases[i + 1] && phases[i].state === \"completed\") {\r\n         if (phases[i + 1].state === \"pending\") {\r\n            phases[i + 1].state = \"active\";\r\n         }\r\n      }\r\n      setOrder({ ...order, phases: phases });\r\n      updateOrder();\r\n   }\r\n\r\n   const nestedClicked = (i, j) => {\r\n   \r\n      let phases = [...order.phases];\r\n\r\n      if (phases[i].nested[j].state === \"active\" || phases[i].nested[j].state == \"pending\") {\r\n         phases[i].nested[j].state = \"completed\";\r\n      } else if (phases[i].nested[j].state === \"completed\") {\r\n         phases[i].nested[j].state = \"under_review\";\r\n      } else if (phases[i].nested[j].state === \"under_review\") {\r\n         phases[i].nested[j].state = \"completed\";\r\n      }\r\n\r\n      if (phases[i].nested[j + 1] && phases[i].nested[j].state === \"completed\") {\r\n         if (phases[i].nested[j + 1].state === \"pending\") {\r\n            phases[i].nested[j + 1].state = \"active\";\r\n         }\r\n      }\r\n      let phaseComplete = true;\r\n      for (var x = 0; x < phases[i].nested.length; x++) {\r\n         if (phases[i].nested[x].state != \"completed\") {\r\n            phaseComplete = false;\r\n            break;\r\n         }\r\n      }\r\n\r\n      if (phaseComplete) {\r\n         phases[i].state = \"completed\";\r\n      } else {\r\n         phases[i].state = \"pending\";\r\n      }\r\n\r\n      setOrder({ ...order, phases: phases });\r\n\r\n      updateOrder();\r\n\r\n   };\r\n\r\n   //initial phase set\r\n   useEffect(() => {\r\n      if (order.phases) {\r\n\r\n         var active_phase = order.phases.findIndex(phase => phase.state === \"active\");\r\n         if (active_phase >= 0)\r\n            setPhase(active_phase);\r\n\r\n         \r\n      }\r\n   }, []);\r\n   //load order\r\n   useEffect(_ => {\r\n\r\n      axios.get(`/order/find/${id}`).then(\r\n         (response) => {\r\n            console.log('order', response.data);\r\n            setOrder(response.data);\r\n         }\r\n      );\r\n      dispatch({\r\n         type: \"SET_TITLE\",\r\n         payload: `Orders / ${props.name}`,\r\n      });\r\n   }, []);\r\n\r\n\r\n   const diffForHumans = (time) => {\r\n      if(time <= 0 ){\r\n         return 'Late';\r\n      }\r\n      let diff = '';\r\n      let seconds = Math.floor(time%60);\r\n      time = (time-seconds)/60;\r\n      let minutes = Math.floor(time%60);\r\n      time = (time-minutes)/60;\r\n      let hours = Math.floor(time%24);\r\n      time = (time-hours)/24;\r\n      let days = Math.floor(time%7);\r\n      time = (time-days)/7;\r\n      let weeks = Math.floor(time);\r\n       \r\n\r\n\r\n      if(weeks > 0)\r\n         diff+= weeks+'W';\r\n      if(days > 0)\r\n         diff += ' '+days+'D';\r\n      if(hours > 0)\r\n         diff += ' '+hours+'H';\r\n      if(minutes > 0)\r\n         diff += ' '+minutes+'M';\r\n      if(seconds > 0)\r\n         diff += ' '+seconds+'S';\r\n\r\n      return diff;\r\n   }\r\n\r\n   return (\r\n      <>\r\n\r\n         <div className=\"flex flex-1 mt-6 overflow-y-auto bg-gray-700\">\r\n\r\n            <div className=\"-mr-3 bg-gray-700\">\r\n\r\n\r\n\r\n               <div className=\"flex flex-col h-full overflow-y-scroll\">\r\n\r\n\r\n                  \r\n                  {/* <Link to='/dashboard'  className=\"mr-auto ml-auto mb-2 bg-gray-500 text-white p-2 rounded-md\">Go Back</Link> */}\r\n                  {order.phases && order.phases.map((phase, index) => (\r\n                     <>\r\n                     {index===0 ? (<div key={index} className=\"h-full mx-auto px-10\">\r\n                        \r\n                        <CountdownCircleTimer\r\n                           isPlaying\r\n                           duration={( (order.orderTimeline*1000) - ( ((new Date()).getTime()) - order.startTime) )/1000}\r\n                           colors={[\r\n                              ['#ff7675']\r\n                           ]}\r\n                        >\r\n                           {({ remainingTime }) => diffForHumans(remainingTime)}\r\n                        </CountdownCircleTimer>\r\n\r\n                        \r\n                     </div>): ''}\r\n                     <TimelineItem\r\n                        title={phase.title}\r\n                        last={index === order.phases.length - 1}\r\n                        state={phase.state}\r\n                        setPhase={_ => {\r\n                           dispatch({\r\n                              type: \"SET_TITLE\",\r\n                              payload: `Orders / ${props.name} / ${phase.title}`,\r\n                           });\r\n                           setPhase(index);\r\n                        }}\r\n                        completePhase={_ => { phaseClicked(index) }}\r\n                        active={phase === order.phases.length - index - 1}\r\n                        nested={phase.nested}\r\n                        completeNestedPhase={(i) => {\r\n                           nestedClicked(index, i);\r\n                        }}\r\n                     />\r\n                     </>\r\n                  ))}\r\n               </div>\r\n            </div>\r\n            <div className=\"flex flex-col flex-1 pb-4 mr-6 bg-white gap-y-2 rounded-t-xl\">\r\n               <nav className=\"flex items-center bg-gray-100 rounded-t-xl\">\r\n                  <NavItem\r\n                     label=\"Chat\"\r\n                     active={!tab}\r\n                     src={chatIcon}\r\n                     onClick={_ => setTab(0)}\r\n                     path=\"\"\r\n                  />\r\n                  <NavItem\r\n                     label=\"Forum\"\r\n                     src={forumIcon}\r\n                     active={tab}\r\n                     onClick={_ => setTab(1)}\r\n                     path=\"forum\"\r\n                  />\r\n               </nav>\r\n               <Routes>\r\n                  <Route path=\"/\" element={order.phases && order.phases.length > 0 && <Chat order_id={id} phase={phase} />} />\r\n                  <Route path=\"forum\" element={<Forum order_id={id} />} />\r\n               </Routes>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Login.js",["323","324","325","326"],"import { useState, useEffect, useContext } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport axios from '../actions/axios';\r\n\r\nimport { Context } from \"./Store\";\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  GET_ERRORS, CLEAR_ERRORS\r\n} from '../actions/types';\r\n\r\nexport default _ => {\r\n\r\n   \r\n   const [email, setEmail] = useState('');\r\n   const [password, setPassword] = useState('');\r\n   const [err, setErr] = useState('');\r\n   const navigate = useNavigate();\r\n\r\n   const [state, dispatch] = useContext(Context);\r\n\r\n   const returnErrors = (msg, status, id = null) => {\r\n      return {\r\n        type: GET_ERRORS,\r\n        payload: { msg, status, id }\r\n      };\r\n    };\r\n\r\n   const handleOnSubmit = (e) => {\r\n\r\n      e.preventDefault();\r\n      dispatch({ type: CLEAR_ERRORS });\r\n\r\n      // Headers\r\n      const config = {\r\n         headers: {\r\n            'Content-Type': 'application/json'\r\n         }\r\n      };\r\n\r\n      // Request body\r\n      const body = JSON.stringify({ email, password });\r\n\r\n      axios\r\n         .post('/auth', body, config)\r\n            .then(res => {\r\n               if(res.status){\r\n                  console.log('1',res.data);\r\n                  dispatch({\r\n                     type: LOGIN_SUCCESS,\r\n                     payload: res.data\r\n                  });\r\n               }else{\r\n                  setErr(res.message);\r\n                  console.log('2',res.message);\r\n                  dispatch(returnErrors(res.message,res.status,'LOGIN_FAIL'));\r\n                  dispatch({ type: LOGIN_FAIL });\r\n               }\r\n            }\r\n            \r\n         )\r\n         .catch(err => {\r\n            setErr(err.response.data.message);\r\n            dispatch(\r\n               returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL')\r\n            );\r\n            dispatch({\r\n               type: LOGIN_FAIL\r\n            });\r\n         });\r\n      // const user = { email, password };\r\n      // login(user);\r\n   };\r\n\r\n\r\n\r\n   useEffect(() => {\r\n      console.log('state changed' , state);\r\n      if(state.auth.isAuthenticated){\r\n         navigate('/dashboard');\r\n      }\r\n   }, [state]);\r\n\r\n   useEffect(_ => {\r\n      dispatch({\r\n         type: \"SET_TITLE\",\r\n         payload: `Login`,\r\n      });\r\n   }, []);\r\n   return (\r\n      <div className=\"flex items-center justify-center h-full bg-gray-50\">\r\n         <div className=\"min-h-screen md:w-1/3 flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n            <div className=\" w-full space-y-8\">\r\n               <div>\r\n                  <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n                     Sign in\r\n                  </h2>\r\n               </div>\r\n               <form className=\"mt-8 space-y-6\" onSubmit={handleOnSubmit} action=\"#\" method=\"POST\">\r\n                  <input type=\"hidden\" name=\"remember\" value=\"true\" />\r\n                  {state.error.msg.msg ? <div className=\"mt-2 mb-2\">\r\n                     <p style={{color:\"red\"}}>{state.error.msg.msg}</p>\r\n                  </div> : err!=\"\" && <div className=\"mt-2 mb-2\"><p style={{color:\"red\"}}>{err}</p></div>}\r\n                  <div className=\"rounded-md shadow-sm -space-y-px\">\r\n                     <div>\r\n                        <label htmlFor=\"email\" className=\"sr-only\">\r\n                           Email\r\n                        </label>\r\n                        <input\r\n                           id=\"email\"\r\n                           name=\"email\"\r\n                           type=\"email\"\r\n                           value={email}\r\n                           onChange={(e) => setEmail(e.target.value)}\r\n                           required\r\n                           className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                           placeholder=\"Email address\"\r\n                        />\r\n                     </div>\r\n                     <div>\r\n                        <label htmlFor=\"password\" className=\"sr-only\">\r\n                           Password\r\n                        </label>\r\n                        <input\r\n                           id=\"password\"\r\n                           name=\"password\"\r\n                           type=\"password\"\r\n                           value={password}\r\n                           onChange={(e) => setPassword(e.target.value)}\r\n                           autoComplete=\"current-password\"\r\n                           required\r\n                           className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                           placeholder=\"Password\"\r\n                        />\r\n                     </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex flex-col items-center justify-between\">\r\n                     <div className=\"flex items-center\">\r\n                        <input\r\n                           id=\"remember_me\"\r\n                           name=\"remember_me\"\r\n                           type=\"checkbox\"\r\n                           className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\r\n                        />\r\n                        <label\r\n                           htmlFor=\"remember_me\"\r\n                           className=\"ml-2 block text-sm text-gray-900\"\r\n                        >\r\n                           Remember me\r\n                        </label>\r\n                     </div>\r\n\r\n                     <div className=\"text-sm\">\r\n                        <a\r\n                           href=\"##\"\r\n                           className=\"font-medium text-indigo-600 hover:text-indigo-500\"\r\n                        >\r\n                           Forgot your password?\r\n                        </a>\r\n                     </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                     <button\r\n                        type=\"submit\"\r\n                        className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                     >\r\n                        <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\r\n                           <svg\r\n                              className=\"h-5 w-5 text-indigo-500 group-hover:text-indigo-400\"\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              viewBox=\"0 0 20 20\"\r\n                              fillRule=\"currentColor\"\r\n                              aria-hidden=\"true\"\r\n                           >\r\n                              <path\r\n                                 fillRule=\"evenodd\"\r\n                                 d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\"\r\n                                 clipRule=\"evenodd\"\r\n                              />\r\n                           </svg>\r\n                        </span>\r\n                        Sign in\r\n                     </button>\r\n                  </div>\r\n               </form>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Dashboard.js",["327","328","329"],"import React, { useContext, useEffect } from \"react\";\r\n\r\nimport { Context } from \"./Store\";\r\nimport {\r\n  LOGOUT_SUCCESS,\r\n} from '../actions/types';\r\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\r\n\r\nimport Sidebar from \"./Sidebar\";\r\nimport HeaderStats from \"./HeaderStats\";\r\nimport DashboardMain from \"./DashboardMain\";\r\nimport DashboardOrder from \"./DashboardOrder\";\r\nimport DashboardOrderCreate from \"./DashboardOrderCreate\";\r\nimport DashboardDepartmentCreate from \"./DashboardDepartmentCreate\";\r\nimport DashboardDepartment from \"./DashboardDepartment\";\r\nimport DashboardUsers from \"./DashboardUsers\";\r\nimport DashboardUsersCreate from \"./DashboardUsersCreate\";\r\n\r\n\r\nexport default () => {\r\n\r\n   const navigate = useNavigate();\r\n   const [state, dispatch] = useContext(Context);\r\n\r\n\r\n   //on authenticate state change\r\n   useEffect(() => {\r\n      if(state.auth.isLoading === false && state.auth.isAuthenticated === false){\r\n         navigate('/logout')\r\n      }\r\n   }, [state]);\r\n   \r\n   // //logout\r\n   const logout = () => {\r\n      dispatch({\r\n         type: LOGOUT_SUCCESS\r\n      });\r\n   }\r\n\r\n   \r\n   useEffect(_ => {\r\n      dispatch({\r\n         type: \"SET_TITLE\",\r\n         payload: `Dashboard`,\r\n      });\r\n      \r\n   }, []);\r\n\r\n\r\n\r\n   return (\r\n      <div className=\"relative h-full overflow-y-auto bg-gray-200 md:ml-64\">\r\n         <Sidebar logout={logout}/>\r\n         <HeaderStats />\r\n         <Routes>\r\n            <Route path=\"/\" element={<DashboardMain />} />\r\n            \r\n            <Route path=\"users\" element={<DashboardUsers />} />\r\n            <Route path=\"users/create\" element = {<DashboardUsersCreate />} />\r\n            <Route path=\"users/edit/:id\" element = {<DashboardUsersCreate />} />\r\n            <Route path=\"departments\" element={<DashboardDepartment />} />\r\n            <Route path=\"departments/create\" element = {<DashboardDepartmentCreate />} />\r\n            <Route path=\"departments/edit/:id\" element = {<DashboardDepartmentCreate />} />\r\n            <Route path = \"orders/create\" element = {<DashboardOrderCreate />} />\r\n            <Route path = \"orders/edit/:id\" element = {<DashboardOrderCreate />} />\r\n            <Route path=\"orders\" element={<DashboardOrder />} />\r\n         </Routes>\r\n      </div>\r\n   );\r\n};\r\n","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\actions\\types.js",[],"C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\actions\\axios.js",[],"C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\TimelineItem.js",[],"C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\NavItem.js",[],"C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Chat.js",["330","331","332","333","334","335"],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SVG from \"react-inlinesvg\";\r\nimport image from \"../assets/icons/image.svg\";\r\nimport send from \"../assets/icons/send.svg\";\r\nimport Pusher from 'pusher-js';\r\nimport axios from \"../actions/axios\";\r\nimport hdate from 'human-date';\r\n\r\n\r\n\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowArrowFunction\": true}] */\r\nexport default ({ order_id, phase }) => {\r\n\r\n\r\n   const navigate = useNavigate();\r\n   const [messages, setMessages] = useState([]);\r\n   const [user, setUser] = useState({ name: \"null\" });\r\n   const [input, setInput] = useState('');\r\n\r\n\r\n   useEffect( () => {\r\n      let user = localStorage.getItem('user');\r\n      \r\n      if(user){\r\n         axios.post('/auth/user', { userId: user }, {\r\n            headers: {\r\n               'Content-Type': 'application/json'\r\n            }\r\n         }).then(res => {\r\n            setUser(res.data);\r\n         }).catch((err) => {\r\n            navigate('/logout');\r\n         });\r\n         \r\n      }else{\r\n         navigate('/logout');\r\n      }\r\n      \r\n\r\n   }, []);\r\n\r\n   const sendMessage = async (e) => {\r\n\r\n      e.preventDefault();\r\n      let allowSend = false;\r\n      if (input.trim() != '') {\r\n         allowSend = true;\r\n      }\r\n      let formData = new FormData();\r\n\r\n      let array = document.getElementById('file').files;\r\n\r\n      if (array.length > 0) {\r\n         for (var i = 0; i < array.length; i++) {\r\n            console.log('appending', array[i]);\r\n            allowSend = true;\r\n            formData.append(\"files\", array[i]);\r\n         }\r\n      }\r\n\r\n      var d = new Date();\r\n\r\n\r\n\r\n\r\n      formData.append(\"sender\", user.name);\r\n      formData.append(\"time\", d.getTime());\r\n      formData.append(\"content\", input);\r\n      formData.append(\"order\", order_id);\r\n      formData.append(\"phase\", phase);\r\n      if (allowSend) {\r\n\r\n         await axios.post('/chat/new', formData, {\r\n            headers: {\r\n               'Content-Type': 'multipart/form-data'\r\n            }\r\n         });\r\n\r\n      }\r\n\r\n      setInput('');\r\n      document.getElementById('file').value = \"\";\r\n      document.getElementById('fileMessage').innerText = '';\r\n   };\r\n\r\n   useEffect(() => {\r\n\r\n      axios.get('/chat/sync/' + order_id).then(\r\n         (msgs) => {\r\n            let arr = msgs.data.reduce((r, a) => {\r\n               r[a.phase] = r[a.phase] || [];\r\n               r[a.phase].push(a);\r\n               return r;\r\n            }, Object.create(null));\r\n            setMessages(arr);\r\n         }\r\n      );\r\n\r\n   }, [])\r\n\r\n   useEffect(() => {\r\n      const pusher = new Pusher('529cf8119f342b5e04b2', {\r\n         cluster: 'ap2'\r\n      });\r\n\r\n      const channel = pusher.subscribe('messages');\r\n      channel.bind('inserted', function (data) {\r\n         if (messages[phase]) {\r\n            setMessages({ ...messages, [phase]: [data, ...messages[phase]] });\r\n         }\r\n      });\r\n      return () => {\r\n         channel.unbind_all();\r\n         channel.unsubscribe();\r\n      }\r\n   }, [messages, phase])\r\n\r\n   useEffect(() => {\r\n      console.log('messages', messages[phase], phase);\r\n   }, [messages])\r\n\r\n   useEffect(() => {\r\n      if (!messages[phase]) {\r\n         messages[phase] = [];\r\n      }\r\n   }, [phase])\r\n\r\n\r\n\r\n\r\n   return (\r\n      <React.Fragment>\r\n         <div className=\"flex flex-col-reverse flex-1 overflow-y-auto\">\r\n\r\n            {messages[phase] && messages[phase].length > 0 && messages[phase].map(message => (\r\n               <div className=\"flex px-4 py-3 gap-x-4 hover:bg-gray-100 hover:shadow\">\r\n                  <div className=\"flex justify-center\">\r\n                     <img\r\n                        src={\r\n                           \"https://images.unsplash.com/photo-1603415526960-f7e0328c63b1?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80\"\r\n                        }\r\n                        alt=\"pic\"\r\n                        className=\"w-8 h-8 bg-gray-200 rounded-full\"\r\n                     />\r\n                  </div>\r\n                  <div className=\"flex flex-col\">\r\n                     <div className=\"flex items-center gap-x-3\">\r\n                        <h1 className=\"text-lg font-semibold\">\r\n                           {message.sender}\r\n                        </h1>\r\n                        <span className=\"-mb-1 text-sm text-gray-400\">\r\n                           {hdate.relativeTime(message.time)}\r\n                        </span>\r\n                     </div>\r\n                     {message.content}\r\n                     <div className=\"flex flex-wrap gap-2 py-2\">\r\n                        {message.images.map(file => (\r\n                              (file.indexOf('.pdf')!==-1) ? <a target=\"_blank\" href={`http://localhost:9000/${file}`}>\r\n                                 <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/PDF_file_icon.svg/1200px-PDF_file_icon.svg.png\"\r\n                              className=\"w-24 h-24 rounded-sm\" alt={file} /></a>:\r\n                              <img\r\n                                 src={`http://localhost:9000/${file}`}\r\n                                 alt=\"img\"\r\n                                 className=\"w-24 h-24 rounded-sm\"\r\n                              />\r\n                        )\r\n                        )}\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            ))}\r\n         </div>\r\n         <div className=\"relative mx-4\">\r\n            <form method=\"POST\" onSubmit={sendMessage} >\r\n               <input type=\"text\" value={input} onChange={(e) => { setInput(e.target.value) }}\r\n                  className=\"w-full py-4 pl-16 pr-12 text-gray-800 bg-gray-200 rounded-sm focus:outline-none focus:bg-white focus:ring-2 ring-gray-500\">\r\n               </input>\r\n               <button type=\"submit\" className=\"absolute top-0 right-0 mt-3 mr-4 text-gray-500 hover:text-indigo-600 focus:outline-none focus:text-indigo-600\">\r\n                  <SVG src={send} className=\"w-8 h-8 fill-current\" />\r\n               </button>\r\n            </form>\r\n            <div id=\"fileMessage\">\r\n            </div>\r\n            <div className=\"group\">\r\n               <input type=\"file\" onChange={(e) => { document.getElementById('fileMessage').innerText = e.target.files.length+ ' files selected'; }} multiple id=\"file\" className=\"hidden\" />\r\n               <button onClick={() => document.getElementById('file').click()} className=\"absolute top-0 left-0 z-10 mt-3 ml-3 text-gray-500 group-hover:text-white focus:outline-none focus:text-gray-800\">\r\n                  <SVG src={image} className=\"w-8 h-8 fill-current \" />\r\n               </button>\r\n               <div className=\"absolute top-0 left-0 h-full rounded-l-sm group-hover:bg-gray-500 w-14\" />\r\n            </div>\r\n         </div>\r\n      </React.Fragment>\r\n   );\r\n};\r\n","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Forum.js",["336","337"],"C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Sidebar.js",[],"C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\HeaderStats.js",[],"C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\DashboardMain.js",["338","339"],"import React, { useContext, useEffect,  } from \"react\";\r\nimport { Context } from \"./Store\";\r\nimport CardLineChart from \"./Cards/CardLineChart.js\";\r\nimport CardBarChart from \"./Cards/CardBarChart.js\";\r\nimport axios from \"../actions/axios\";\r\n// import CardPageVisits from \"./Cards/CardPageVisits.js\";\r\n// import CardSocialTraffic from \"./Cards/CardSocialTraffic.js\";\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowArrowFunction\": true}] */\r\nexport default props => {\r\n\r\n   let salesData  = {\r\n      currentYear: [0,0,0,0,0,0,0,0,0,0,0,0],\r\n      prevYear: [0,0,0,0,0,0,0,0,0,0,0,0]\r\n   };\r\n\r\n   let ordersData = {\r\n      currentYear: [0,0,0,0,0,0,0,0,0,0,0,0],\r\n      prevYear: [0,0,0,0,0,0,0,0,0,0,0,0]\r\n   }\r\n\r\n\r\n\r\n   const loadData = async () => {\r\n      const cYear = new Date().getFullYear();\r\n      const pYear = new Date().getFullYear() -1;\r\n      \r\n      await axios.get('/order/all').then(\r\n         (response) => {\r\n            let orders = response.data;\r\n            orders.forEach(order => {\r\n               \r\n               var date = new Date(order.startTime);\r\n               var month = date.getMonth();\r\n               var year = date.getFullYear();\r\n               \r\n               if(year === cYear){   \r\n                  salesData.currentYear[month] += order.amount;\r\n                  ordersData.currentYear[month]++;\r\n               }else if(year === pYear){\r\n                  salesData.prevYear[month] += order.amount;\r\n                  ordersData.prevYear[month]++;\r\n               }\r\n\r\n            });\r\n            \r\n            \r\n         }\r\n      );\r\n   };\r\n\r\n   loadData();\r\n   \r\n   const [state, dispatch] = useContext(Context);\r\n   useEffect(_ => {\r\n      dispatch({\r\n         type: \"SET_TITLE\",\r\n         payload: `Dashboard`,\r\n      });\r\n   }, []);\r\n   return (\r\n      <div className=\"w-full px-4 mx-auto -m-16 md:px-10\">\r\n         <div className=\"flex flex-wrap\">\r\n            <div className=\"w-full px-4 mb-12 xl:w-8/12 xl:mb-0\">\r\n               <CardLineChart salesData={salesData} />\r\n            </div>\r\n            <div className=\"w-full px-4 xl:w-4/12\">\r\n               <CardBarChart ordersData={ordersData}/>\r\n            </div>\r\n         </div>\r\n         {/* <div className=\"flex flex-wrap mt-4\">\r\n            <div className=\"w-full px-4 mb-12 xl:w-8/12 xl:mb-0\">\r\n               <CardPageVisits />\r\n            </div>\r\n            <div className=\"w-full px-4 xl:w-4/12\">\r\n               <CardSocialTraffic />\r\n            </div>\r\n         </div> */}\r\n      </div>\r\n   );\r\n};\r\n","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\DashboardOrder.js",["340","341","342","343","344","345","346","347","348","349"],"C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\DashboardDepartmentCreate.js",["350","351","352"],"import { useEffect, useContext, useState } from \"react\";\r\nimport {useNavigate, useParams} from 'react-router-dom';\r\nimport { Context } from \"./Store\";\r\nimport axios from \"../actions/axios\";\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowArrowFunction\": true}] */\r\nexport default (props) => {\r\n\r\n   const { id } = useParams();\r\n   const navigate = useNavigate();\r\n\r\n   const [action,setAction] = useState('Add');\r\n   const [name,setName] = useState('');\r\n   const[description,setDescription] = useState('');\r\n\r\n   const onSubmit = (e) => {\r\n      if(action === 'Add'){\r\n         addDepartment(e);\r\n      }else if(action === 'Update'){\r\n         updateDepartment(e);\r\n      }else{\r\n         alert('Unexpected Error Occured.');\r\n      }\r\n   }\r\n   const addDepartment = async (e) => {\r\n      e.preventDefault();\r\n      await axios.post('/department/new', {\r\n         name:name,\r\n         description:description\r\n      }).then((res) => {\r\n         setName('');\r\n         setDescription('');\r\n         navigate('/dashboard/departments');\r\n      });\r\n\r\n   };\r\n\r\n   const updateDepartment = async (e) => {\r\n      e.preventDefault();\r\n      await axios.post('/department/update/'+id , {\r\n         name:name,\r\n         description:description\r\n      }).then( (res) => {\r\n         setName('');\r\n         setDescription('');\r\n         navigate('/dashboard/departments');\r\n      });\r\n   }\r\n\r\n   const [state, dispatch] = useContext(Context);\r\n   useEffect(_ => {\r\n      dispatch({\r\n         type: \"SET_TITLE\",\r\n         payload: `Dashboard / Departments / Create`,\r\n      });\r\n   }, []);\r\n\r\n   useEffect(() => {\r\n      if(id){\r\n         setAction('Update');\r\n         axios.get('/department/find/'+id).then(\r\n            (response) => {\r\n               if(response.data){\r\n                  setName(response.data.name);\r\n                  setDescription(response.data.description);\r\n               }else{\r\n                  alert('Unexpected Data Occured while fetching department details');\r\n               }\r\n            }\r\n         );\r\n      }\r\n   }, []);\r\n   return (\r\n      <div class=\"mt-10 sm:mt-0\">\r\n         <div class=\"sm: px-10 md:px-20 lg:px-40 xl:px-64 py-10\">\r\n            <div class=\"mt-5 md:mt-0 md:col-span-2\">\r\n               <form onSubmit={onSubmit} method=\"POST\">\r\n                  <div class=\"shadow overflow-hidden w-full sm:rounded-md\">\r\n                     <div class=\"px-4 py-5 bg-white sm:p-6\">\r\n                        <div class=\"grid grid-cols-6 gap-6\">\r\n                           <div class=\"col-span-6 sm:col-span-4\">\r\n                              <label\r\n                                 htmlFor=\"Brand name\"\r\n                                 class=\"block text-sm font-medium text-gray-700\"\r\n                              >\r\n                                 Department name\r\n                              </label>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name=\"brand_name\"\r\n                                 id=\"brand_name\"\r\n                                 value={name}\r\n                                 onChange={(e)=>{setName(e.target.value)}}\r\n                                 autoComplete=\"brand_name\"\r\n                                 class=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                              />\r\n                           </div>\r\n                           <div class=\"col-span-6 sm:col-span-4\">\r\n                              <label\r\n                                 htmlFor=\"Customer name\"\r\n                                 class=\"block text-sm font-medium text-gray-700\"\r\n                              >\r\n                                 Department description\r\n                              </label>\r\n                              <textarea\r\n                                 type=\"text\"\r\n                                 name=\"customer_name\"\r\n                                 id=\"customer_name\"\r\n                                 value={description}\r\n                                 onChange={(e)=>{setDescription(e.target.value)}}\r\n                                 autoComplete=\"customer_name\"\r\n                                 class=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                              />\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n                     <div class=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\r\n                        <button\r\n                           type=\"submit\"\r\n                           class=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-pink-600 hover:bg-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500\"\r\n                        >\r\n                           {action}\r\n                        </button>\r\n                     </div>\r\n                  </div>\r\n               </form>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\DashboardOrderCreate.js",["353","354","355","356"],"import { useEffect, useContext, useState } from \"react\";\r\nimport { Context } from \"./Store\";\r\nimport axios from \"../actions/axios\";\r\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst DashboardOrderCreate = () => {\r\n\r\n   const { id } = useParams();\r\n   const navigate = useNavigate();\r\n\r\n   const [action,setAction] = useState('Create Order');\r\n\r\n\r\n   const [ customerName,setCustomerName ] = useState('');\r\n   const [ brand,setBrand ] = useState('');\r\n   const [ country,setCountry ] = useState('');\r\n   const [ _state,set_State ] = useState('');\r\n\r\n   const [ rows,setRows] = useState(1);\r\n   const [ orderCode, setOrderCode] = useState([]);\r\n   const [ orderStatus, setOrderStatus] = useState([1]);\r\n   const [ product,setProduct ] = useState(['']);\r\n   const [ fabric,setFabric ] = useState(['']);\r\n   const [ color , setColor ] = useState([1]);\r\n   const [ quantity,setQuantity ] = useState([1]); \r\n   \r\n\r\n   const [ orderTimeline,setOrderTimeline ] = useState(604800);\r\n\r\n\r\n   const onSubmit = (e) => {\r\n\r\n      if(action === 'Create Order'){\r\n         addOrder(e);\r\n      }else if(action === 'Update Order'){\r\n         updateOrder(e);\r\n      }else{\r\n         alert('Unexpected Error Occured.');\r\n      }\r\n   }\r\n\r\n   const addOrder =  (e) => {\r\n      e.preventDefault();\r\n      let user = localStorage.getItem('user');\r\n      \r\n      if(user){\r\n         axios.post('/auth/user', { userId: user }, {\r\n            headers: {\r\n               'Content-Type': 'application/json'\r\n            }\r\n         }).then(res => {\r\n            \r\n            axios.post('/order/new', {\r\n               orderCode: orderCode,\r\n               orderStatus: orderStatus,\r\n               customerName: customerName,\r\n               brandName: brand,\r\n               country: country,\r\n               state: _state,\r\n               product: product,\r\n               fabric: fabric,\r\n               color: color,\r\n               quantity:quantity,\r\n               orderTimeline: orderTimeline,              \r\n               user:res.data._id\r\n            }).then((res) => {\r\n               navigate('/dashboard/orders');\r\n            });\r\n\r\n         }).catch((err) => {\r\n            alert('Unexpected error occured');\r\n         });\r\n         \r\n      }else{\r\n         navigate('/logout');\r\n      }\r\n      \r\n\r\n   };\r\n\r\n   const updateOrder = async (e) => {\r\n      e.preventDefault();\r\n      await axios.post('/order/update/'+id , {\r\n         orderCode: orderCode,\r\n         orderStatus: orderStatus,\r\n         customerName: customerName,\r\n         brandName: brand,\r\n         country: country,\r\n         state: _state,\r\n         product: product,\r\n         fabric: fabric,\r\n         color: color,\r\n         quantity:quantity,\r\n         orderTimeline: orderTimeline,              \r\n      }).then( (res) => {\r\n         navigate('/dashboard/orders');\r\n      });\r\n   }\r\n\r\n   const removeRow = (i) => {\r\n      if(rows>1){\r\n         setRows(rows-1);\r\n\r\n         let newCode = [...orderCode]; newCode.pop(); setOrderCode([...newCode]);\r\n         let newStatus = [...orderStatus]; newStatus.pop(); setOrderStatus([...newStatus]);\r\n         let newProd= [...product]; newProd.pop(); setProduct([...newProd]);\r\n         let newFab = [...fabric]; newFab.pop(); setFabric([...newFab]);\r\n         let newQuan = [...quantity]; newQuan.pop(); setQuantity([...newQuan]);\r\n         let newCol = [...color]; newCol.pop(); setColor([...newCol]);\r\n         \r\n      }\r\n   }\r\n\r\n   const addRow = () => {\r\n      if(rows<20){\r\n         let newCode = [...orderCode]; newCode[rows] = \"\"; setOrderCode([...newCode]);\r\n         let newStatus = [...orderStatus]; newStatus[rows] = \"\"; setOrderStatus([...orderStatus]);\r\n         let newProd = [...product]; newProd[rows] = \"\"; setProduct([...newProd]);\r\n         let newFab = [...fabric]; newFab[rows] = \"\"; setFabric([...newFab]);\r\n         let newQuan = [...quantity]; newQuan[rows] = \"\"; setQuantity([...newQuan]);\r\n         let newCol = [...color]; newCol[rows] = \"\"; setColor([...newCol]);\r\n         setRows(rows+1);\r\n      }else{\r\n         alert('You have reached maximum number of rows');\r\n      }\r\n      \r\n   }\r\n\r\n   const [state, dispatch] = useContext(Context);\r\n   useEffect(_ => {\r\n      dispatch({\r\n         type: \"SET_TITLE\",\r\n         payload: `Dashboard / Orders / Create`,\r\n      });\r\n   }, []);\r\n\r\n   useEffect(() => {\r\n      if(id){\r\n         setAction('Update Order');\r\n         axios.get('/order/find/'+id).then(\r\n            (response) => {\r\n               if(response.data){\r\n                  setOrderCode(response.data.orderCode);\r\n                  setOrderStatus(response.data.orderStatus);\r\n                  setCustomerName(response.data.customerName);\r\n                  setBrand(response.data.brandName);\r\n                  setCountry(response.data.country);\r\n                  set_State(response.data.state);\r\n                  setProduct(response.data.product);\r\n                  setFabric(response.data.fabric);\r\n                  setQuantity(response.data.quantity);\r\n                  setColor(response.data.color);  \r\n                  setOrderTimeline(response.data.orderTimeline);\r\n               }else{\r\n                  alert('Unexpected Data Occured while fetching department details');\r\n               }\r\n            }\r\n         );\r\n      }\r\n   }, []);\r\n\r\n\r\n   return (\r\n      <div className=\"mt-10 sm:mt-0\">\r\n         <div className=\"sm: px-10 md:px-20 lg:px-40 xl:px-64 py-10\">\r\n            <div className=\"mt-5 md:mt-0 md:col-span-2\">\r\n               <form onSubmit={onSubmit} method=\"POST\">\r\n                  <div className=\"shadow overflow-hidden w-full sm:rounded-md\">\r\n                     <div className=\"px-4 py-5 bg-white sm:p-6\">\r\n                        <div className=\"grid grid-cols-12 gap-6\">\r\n\r\n\r\n                           {/* Customer Name */}\r\n                           <div className=\"col-span-6\">\r\n                              <label\r\n                                 htmlFor=\"Customer name\"\r\n                                 className=\"block text-sm font-medium text-gray-700\"\r\n                              >\r\n                                 Customer name\r\n                              </label>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name=\"customer_name\"\r\n                                 id=\"customer_name\"\r\n                                 value={customerName}\r\n                                 onChange={(e) => {setCustomerName(e.target.value)}} required\r\n                                 autoComplete=\"customer_name\"\r\n                                 className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                              />\r\n                           </div>\r\n                           \r\n                           {/* Brand Name */}\r\n                           <div className=\"col-span-6\">\r\n                              <label\r\n                                 htmlFor=\"Brand name\"\r\n                                 className=\"block text-sm font-medium text-gray-700\"\r\n                              >\r\n                                 Brand name\r\n                              </label>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name=\"brand_name\"\r\n                                 id=\"brand_name\"\r\n                                 value={brand}\r\n                                 onChange={(e) => setBrand(e.target.value)} required\r\n                                 autoComplete=\"brand_name\"\r\n                                 className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                              />\r\n                           </div>\r\n\r\n                           {/* Country */}\r\n                           <div className=\"col-span-6\">\r\n                              <label\r\n                                 htmlFor=\"country\"\r\n                                 className=\"block text-sm font-medium text-gray-700\"\r\n                              >\r\n                                 Country\r\n                              </label>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name=\"country\"\r\n                                 id=\"country\"\r\n                                 value={country}\r\n                                 onChange={(e) => {setCountry(e.target.value)}} required\r\n                                 autoComplete=\"customer_name\"\r\n                                 className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                              />\r\n                           </div>\r\n\r\n                           {/* State */}\r\n                           <div className=\"col-span-6\">\r\n                              <label\r\n                                 htmlFor=\"state\"\r\n                                 className=\"block text-sm font-medium text-gray-700\"\r\n                              >\r\n                                 State\r\n                              </label>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name=\"state\"\r\n                                 id=\"state\"\r\n                                 value={_state}\r\n                                 onChange={(e) => {set_State(e.target.value)}} required\r\n                                 autoComplete=\"state\"\r\n                                 className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                              />\r\n                           </div>\r\n\r\n                           <div className=\"col-span-12\">\r\n                              <button \r\n                              type=\"button\"\r\n                              className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-pink-600 hover:bg-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500\"\r\n                              onClick={ () => addRow() } >Add +</button>\r\n                              {rows>1 && <button type=\"button\"\r\n                              onClick={ () => removeRow(rows-1) }\r\n                              className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-pink-600 hover:bg-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500 mt-2 ml-5\"\r\n                              >X</button>}\r\n                           </div>\r\n            \r\n                        \r\n                           { [...Array(rows)].map((_,i) => (    \r\n                              <>\r\n                              \r\n                              {/* Order Code */}\r\n                              <div className=\"col-span-2\">\r\n                                 <label\r\n                                    htmlFor=\"Order Code\"\r\n                                    className=\"block text-sm font-medium text-gray-700\"\r\n                                 >\r\n                                    Order Code\r\n                                 </label>\r\n                                 <input\r\n                                    type=\"text\"\r\n                                    name=\"order_code\"\r\n                                    id=\"order_code\"\r\n                                    value={orderCode[i]}\r\n                                    onChange={(e) => { let newCode = [...orderCode]; newCode[i] = e.target.value; setOrderCode([...newCode]) }} required\r\n                                    autoComplete=\"order_code\"\r\n                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                                 />\r\n                              </div>\r\n                           \r\n                              {/* Order Status */}\r\n                              <div className=\"col-span-2\">\r\n                                 <label\r\n                                    htmlFor=\"Order Status\"\r\n                                    className=\"block text-sm font-medium text-gray-700\"\r\n                                 >\r\n                                    Order Status\r\n                                 </label>\r\n                                 <select name=\"orderStatus\" required\r\n                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                                    onChange= {(e) => { let newStatus = [...orderStatus]; newStatus[i] = e.target.value; setOrderStatus([...newStatus]) }}>\r\n\r\n                                       <option value=\"1\" selected={orderStatus[i]===1}>In Production</option>\r\n                                       <option value=\"2\" selected={orderStatus[i]===2}>Sample Approval</option>\r\n                                       <option value=\"3\" selected={orderStatus[i]===3}>Sample Awaiting</option>\r\n                                       <option value=\"4\" selected={orderStatus[i]===4}>Open</option>\r\n                                       <option value=\"5\" selected={orderStatus[i]===5}>Sample Shipped For Approval</option>\r\n                                 </select>\r\n                              </div>\r\n\r\n                              <div className=\"col-span-2\">\r\n                                 <label\r\n                                    htmlFor=\"product\"\r\n                                    className=\"block text-sm font-medium text-gray-700\"\r\n                                 >\r\n                                    Product\r\n                                 </label>\r\n                                 <input\r\n                                    type=\"text\"\r\n                                    name=\"product\"\r\n                                    id=\"product\"\r\n                                    value={product[i]}\r\n                                    onChange={(e)=>{ let newProd = [...product]; newProd[i] = e.target.value; setProduct([...newProd]) }} required\r\n                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                                 />\r\n                              </div>\r\n                              <div className=\"col-span-2\">\r\n                                 <label\r\n                                    htmlFor=\"fabric\"\r\n                                    className=\"block text-sm font-medium text-gray-700\"\r\n                                 >\r\n                                    Fabric\r\n                                 </label>\r\n                                 <input\r\n                                    type=\"text\"\r\n                                    name=\"fabric\"\r\n                                    id=\"fabric\"\r\n                                    value={fabric[i]}\r\n                                    onChange={(e)=>{let newFab = [...fabric]; newFab[i] = e.target.value; setFabric([...newFab])}} required\r\n                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                                 />\r\n                              </div>\r\n                              <div className=\"col-span-2\">\r\n                                 <label\r\n                                    htmlFor=\"color\"\r\n                                    className=\"block text-sm font-medium text-gray-700\"\r\n                                 >\r\n                                    Color\r\n                                 </label>\r\n                                 <select name=\"color\" required\r\n                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                                    onChange= {(e) => { let newCol = [...color]; newCol[i] = e.target.value; setColor([...newCol]) }}>\r\n\r\n                                       <option value=\"1\" selected={color[i]===1}>1</option>\r\n                                       <option value=\"2\" selected={color[i]===2}>2</option>\r\n                                       <option value=\"3\" selected={color[i]===3}>3</option>\r\n                                       <option value=\"4\" selected={color[i]===4}>4</option>\r\n                                       <option value=\"5\" selected={color[i]===5}>5</option>\r\n                                 </select>\r\n                              \r\n                              </div>\r\n                              <div className=\"col-span-2\">\r\n                                 <label\r\n                                    htmlFor=\"Quantity\"\r\n                                    className=\"block text-sm font-medium text-gray-700\"\r\n                                 >\r\n                                    Quantity\r\n                                 </label>\r\n                                 <input\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    name=\"quantity\"\r\n                                    id=\"quantity\"\r\n                                    value={quantity[i]}\r\n                                    onChange={ (e)=>{ let newQuan = [...quantity]; newQuan[i] = e.target.value; setQuantity([...newQuan]); } } required\r\n                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                                 />\r\n                                 \r\n                              </div>\r\n                              \r\n                             \r\n                              </>\r\n                           ))\r\n                              \r\n                           }  \r\n                        \r\n                           {/* Order Timeline */}\r\n                           <div className=\"col-span-12\">\r\n                              <label\r\n                                 htmlFor=\"Order Time\"\r\n                                 className=\"block text-sm font-medium text-gray-700\"\r\n                              >\r\n                                 Order Timeline\r\n                              </label>\r\n                              <select name=\"order_timeline\" required\r\n                                 className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                                 onChange= {(e) => {setOrderTimeline(e.target.value)}}>\r\n\r\n                                    <option value=\"604800\" selected={(orderTimeline===604800)} >1 week</option>\r\n                                    <option value=\"1209600\" selected={(orderTimeline===1209600)} >2 weeks</option>\r\n                                    <option value=\"1814400\" selected={(orderTimeline===1814400)}>3 weeks</option>\r\n                                    <option value=\"2419200\" selected={(orderTimeline===2419200)}>4 weeks</option>\r\n                                    <option value=\"3024000\" selected={(orderTimeline===3024000)}>5 weeks</option>\r\n                                    <option value=\"3628800\" selected={(orderTimeline===3628800)}>6 weeks</option>\r\n                                    <option value=\"4233600\" selected={(orderTimeline===4233600)}>7 weeks</option>\r\n                                    <option value=\"4838400\" selected={(orderTimeline===4838400)}>8 weeks</option>\r\n                              </select>\r\n                             \r\n                           </div>\r\n                           \r\n\r\n                           \r\n                        </div>\r\n                     </div>\r\n                     <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\r\n                        <button\r\n                           type=\"submit\"\r\n                           className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-pink-600 hover:bg-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500\"\r\n                        >\r\n                           {action}\r\n                        </button>\r\n                     </div>\r\n                  </div>\r\n               </form>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default DashboardOrderCreate;","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\DashboardDepartment.js",["357","358","359"],"import { useEffect, useContext, useState } from \"react\";\r\nimport { Context } from \"./Store\";\r\nimport axios from \"../actions/axios\";\r\nimport { Link , useNavigate} from \"react-router-dom\";\r\n\r\n\r\nexport default (props) => {\r\n\r\n   const navigate = useNavigate();\r\n   const [departments, setDepartments] = useState([]);\r\n\r\n   const [state, dispatch] = useContext(Context);\r\n\r\n   const loadDepartments = async () => {\r\n      axios.get('/department/sync').then(\r\n         (response) => {\r\n            setDepartments(response.data);\r\n         }\r\n      );\r\n   };\r\n\r\n   const editDepartment = async (department) => {\r\n\r\n      navigate('/dashboard/departments/edit/'+department);\r\n   }\r\n\r\n   const deleteDepartment = async (department) => {\r\n      \r\n      if(window.confirm('Are you sure you want to delete this entry?')){\r\n         axios.post('/department/delete/'+department, {} , {\r\n            headers: {\r\n               'Content-Type': 'application/json'\r\n            }\r\n         }).then(res => {\r\n            setDepartments(departments.filter( (dep) => {return dep._id !== department} ));\r\n         }).catch((err) => {\r\n            alert('Unexpected error occured while deleting department');\r\n         });\r\n      }\r\n      \r\n   }\r\n\r\n   useEffect(_ => {\r\n      dispatch({\r\n         type: \"SET_TITLE\",\r\n         payload: `Dashboard / Orders`,\r\n      });\r\n      loadDepartments();\r\n   }, []);\r\n\r\n   return (\r\n      <div className=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded\">\r\n         <div className=\"rounded-t mb-0 px-4 py-3 border-0\">\r\n            <div className=\"flex flex-wrap items-center\">\r\n               <div className=\"relative w-full px-4 max-w-full flex-grow flex-1\">\r\n                  <h3 className=\"font-semibold text-base text-gray-800\">\r\n                     Departments\r\n            </h3>\r\n               </div>\r\n               <div className=\"relative w-full px-4 max-w-full flex-grow flex-1 text-right\">\r\n                  <Link\r\n                     to=\"/dashboard/departments/create\"\r\n                     className=\"bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                     type=\"button\"\r\n                  >\r\n                     Create New\r\n                  </Link>\r\n               </div>\r\n            </div>\r\n         </div>\r\n         <div className=\"block w-full overflow-x-auto\">\r\n\r\n            <table className=\"items-center w-full bg-transparent border-collapse\">\r\n               <thead>\r\n                  <tr>\r\n                     <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                        #\r\n                    </th>\r\n                     <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                        Name\r\n                    </th>\r\n                     <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                        Description\r\n                    </th>\r\n                     <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                        Actions\r\n                    </th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {departments.length > 0 && departments.map((department, index) =>\r\n                     <tr key={index}>\r\n                        <th className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-left\">\r\n                           {index+1}\r\n                        </th>\r\n                        <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n                           {department.name}\r\n                        </td>\r\n                        <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n                           {department.description}\r\n                        </td>\r\n                        <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n\r\n                           <button\r\n                              className=\"bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                              type=\"button\"\r\n                              onClick={(e) => { e.stopPropagation();editDepartment(department._id)}}\r\n                           >\r\n                              Edit\r\n                        </button>\r\n\r\n                           <button\r\n                              className=\"bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                              type=\"button\"\r\n                              onClick={(e) => { e.stopPropagation();deleteDepartment(department._id)}}\r\n                           >\r\n                              Delete\r\n                        </button>\r\n\r\n                        </td>\r\n                     </tr>\r\n                  )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Dropdowns\\NotificationDropdown.js",[],"C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Dropdowns\\UserDropdown.js",[],"C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Cards\\CardStats.js",[],"C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Cards\\CardLineChart.js",["360"],"import React from \"react\";\r\nimport Chart from \"chart.js\";\r\n\r\nexport default function CardLineChart({ salesData }) {\r\n   React.useEffect(() => {\r\n      var config = {\r\n         type: \"line\",\r\n         data: {\r\n            labels: [\r\n               \"Jan\",\r\n               \"Feb\",\r\n               \"Mar\",\r\n               \"Apr\",\r\n               \"May\",\r\n               \"Jun\",\r\n               \"Jul\",\r\n               \"Aug\",\r\n               \"Sep\",\r\n               \"Oct\",\r\n               \"Nov\",\r\n               \"Dec\",\r\n            ],\r\n            datasets: [\r\n               {\r\n                  label: new Date().getFullYear(),\r\n                  backgroundColor: \"#4c51bf\",\r\n                  borderColor: \"#4c51bf\",\r\n                  data: salesData.currentYear,\r\n                  fill: false,\r\n               },\r\n               {\r\n                  label: new Date().getFullYear() - 1,\r\n                  fill: false,\r\n                  backgroundColor: \"#fff\",\r\n                  borderColor: \"#fff\",\r\n                  data: salesData.prevData,\r\n               },\r\n            ],\r\n         },\r\n         options: {\r\n            maintainAspectRatio: true,\r\n            responsive: true,\r\n            title: {\r\n               display: false,\r\n               text: \"Sales Charts\",\r\n               fontColor: \"white\",\r\n            },\r\n            legend: {\r\n               labels: {\r\n                  fontColor: \"white\",\r\n               },\r\n               align: \"end\",\r\n               position: \"bottom\",\r\n            },\r\n            tooltips: {\r\n               mode: \"index\",\r\n               intersect: false,\r\n            },\r\n            hover: {\r\n               mode: \"nearest\",\r\n               intersect: true,\r\n            },\r\n            scales: {\r\n               xAxes: [\r\n                  {\r\n                     ticks: {\r\n                        fontColor: \"rgba(255,255,255,.7)\",\r\n                     },\r\n                     display: true,\r\n                     scaleLabel: {\r\n                        display: false,\r\n                        labelString: \"Month\",\r\n                        fontColor: \"white\",\r\n                     },\r\n                     gridLines: {\r\n                        display: false,\r\n                        borderDash: [2],\r\n                        borderDashOffset: [2],\r\n                        color: \"rgba(33, 37, 41, 0.3)\",\r\n                        zeroLineColor: \"rgba(0, 0, 0, 0)\",\r\n                        zeroLineBorderDash: [2],\r\n                        zeroLineBorderDashOffset: [2],\r\n                     },\r\n                  },\r\n               ],\r\n               yAxes: [\r\n                  {\r\n                     ticks: {\r\n                        fontColor: \"rgba(255,255,255,.7)\",\r\n                     },\r\n                     display: true,\r\n                     scaleLabel: {\r\n                        display: false,\r\n                        labelString: \"Value\",\r\n                        fontColor: \"white\",\r\n                     },\r\n                     gridLines: {\r\n                        borderDash: [3],\r\n                        borderDashOffset: [3],\r\n                        drawBorder: false,\r\n                        color: \"rgba(255, 255, 255, 0.15)\",\r\n                        zeroLineColor: \"rgba(33, 37, 41, 0)\",\r\n                        zeroLineBorderDash: [2],\r\n                        zeroLineBorderDashOffset: [2],\r\n                     },\r\n                  },\r\n               ],\r\n            },\r\n         },\r\n      };\r\n      var ctx = document.getElementById(\"line-chart\").getContext(\"2d\");\r\n      window.myLine = new Chart(ctx, config);\r\n   }, []);\r\n   return (\r\n      <>\r\n         <div className=\"relative flex flex-col w-full min-w-0 mb-6 break-words bg-gray-800 rounded shadow-lg\">\r\n            <div className=\"px-4 py-3 mb-0 bg-transparent rounded-t\">\r\n               <div className=\"flex flex-wrap items-center\">\r\n                  <div className=\"relative flex-1 flex-grow w-full max-w-full\">\r\n                     <h6 className=\"mb-1 text-xs font-semibold text-gray-200 uppercase\">\r\n                        Overview\r\n                     </h6>\r\n                     <h2 className=\"text-xl font-semibold text-white\">\r\n                        Sales value\r\n                     </h2>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div className=\"flex-auto p-4\">\r\n               {/* Chart */}\r\n               <div className=\"relative h-350-px\">\r\n                  <canvas id=\"line-chart\"></canvas>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n}\r\n","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Cards\\CardBarChart.js",["361"],"import React from \"react\";\r\nimport Chart from \"chart.js\";\r\n\r\nexport default function CardBarChart({ ordersData }) {\r\n   React.useEffect(() => {\r\n      let config = {\r\n         type: \"bar\",\r\n         data: {\r\n            labels: [\r\n               \"Jan\",\r\n               \"Feb\",\r\n               \"Mar\",\r\n               \"Apr\",\r\n               \"May\",\r\n               \"Jun\",\r\n               \"Jul\",\r\n               \"Aug\",\r\n               \"Sep\",\r\n               \"Oct\",\r\n               \"Nov\",\r\n               \"Dec\",\r\n            ],\r\n            datasets: [\r\n               {\r\n                  label: new Date().getFullYear(),\r\n                  backgroundColor: \"#ed64a6\",\r\n                  borderColor: \"#ed64a6\",\r\n                  data: ordersData.currentYear,\r\n                  fill: false,\r\n                  barThickness: 8,\r\n               },\r\n               {\r\n                  label: new Date().getFullYear() - 1,\r\n                  fill: false,\r\n                  backgroundColor: \"#4c51bf\",\r\n                  borderColor: \"#4c51bf\",\r\n                  data: ordersData.prevYear,\r\n                  barThickness: 8,\r\n               },\r\n            ],\r\n         },\r\n         options: {\r\n            maintainAspectRatio: true,\r\n            responsive: true,\r\n            title: {\r\n               display: false,\r\n               text: \"Orders Chart\",\r\n            },\r\n            tooltips: {\r\n               mode: \"index\",\r\n               intersect: false,\r\n            },\r\n            hover: {\r\n               mode: \"nearest\",\r\n               intersect: true,\r\n            },\r\n            legend: {\r\n               labels: {\r\n                  fontColor: \"rgba(0,0,0,.4)\",\r\n               },\r\n               align: \"end\",\r\n               position: \"bottom\",\r\n            },\r\n            scales: {\r\n               xAxes: [\r\n                  {\r\n                     display: false,\r\n                     scaleLabel: {\r\n                        display: true,\r\n                        labelString: \"Month\",\r\n                     },\r\n                     gridLines: {\r\n                        borderDash: [2],\r\n                        borderDashOffset: [2],\r\n                        color: \"rgba(33, 37, 41, 0.3)\",\r\n                        zeroLineColor: \"rgba(33, 37, 41, 0.3)\",\r\n                        zeroLineBorderDash: [2],\r\n                        zeroLineBorderDashOffset: [2],\r\n                     },\r\n                  },\r\n               ],\r\n               yAxes: [\r\n                  {\r\n                     display: true,\r\n                     scaleLabel: {\r\n                        display: false,\r\n                        labelString: \"Value\",\r\n                     },\r\n                     gridLines: {\r\n                        borderDash: [2],\r\n                        drawBorder: false,\r\n                        borderDashOffset: [2],\r\n                        color: \"rgba(33, 37, 41, 0.2)\",\r\n                        zeroLineColor: \"rgba(33, 37, 41, 0.15)\",\r\n                        zeroLineBorderDash: [2],\r\n                        zeroLineBorderDashOffset: [2],\r\n                     },\r\n                  },\r\n               ],\r\n            },\r\n         },\r\n      };\r\n      let ctx = document.getElementById(\"bar-chart\").getContext(\"2d\");\r\n      window.myBar = new Chart(ctx, config);\r\n   }, []);\r\n   return (\r\n      <>\r\n         <div className=\"relative flex flex-col w-full min-w-0 mb-6 break-words bg-white rounded shadow-lg\">\r\n            <div className=\"px-4 py-3 mb-0 bg-transparent rounded-t\">\r\n               <div className=\"flex flex-wrap items-center\">\r\n                  <div className=\"relative flex-1 flex-grow w-full max-w-full\">\r\n                     <h6 className=\"mb-1 text-xs font-semibold text-gray-500 uppercase\">\r\n                        Performance\r\n                     </h6>\r\n                     <h2 className=\"text-xl font-semibold text-gray-800\">\r\n                        Orders\r\n                     </h2>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div className=\"flex-auto p-4\">\r\n               {/* Chart */}\r\n               <div className=\"relative h-64\">\r\n                  <canvas id=\"bar-chart\"></canvas>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n}\r\n","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Cards\\CardPageVisits.js",[],["362","363"],"C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Cards\\CardSocialTraffic.js",[],"C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\Modal.js",[],"C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\ForumModal.js",[],"C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\hooks\\useModal.js",[],"C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\DashboardUsers.js",["364","365","366"],"import { useEffect, useContext, useState } from \"react\";\r\nimport { Context } from \"./Store\";\r\nimport axios from \"../actions/axios\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\n\r\nexport default (props) => {\r\n\r\n   const navigate = useNavigate();\r\n\r\n   const [users, setUsers] = useState([]);\r\n\r\n   const [state, dispatch] = useContext(Context);\r\n\r\n   const loadUsers = async () => {\r\n      axios.get('/users/sync').then(\r\n         (response) => {\r\n            setUsers(response.data);\r\n         }\r\n      );\r\n   };\r\n\r\n   const editUser = async (user) => {\r\n\r\n      navigate('/dashboard/users/edit/'+user);\r\n   }\r\n\r\n   const deleteUser = async (user) => {\r\n      \r\n      if(window.confirm('Are you sure you want to delete this user?')){\r\n         axios.post('/users/delete/'+user, {} , {\r\n            headers: {\r\n               'Content-Type': 'application/json'\r\n            }\r\n         }).then(res => {\r\n            setUsers(users.filter( (item) => {return item._id !== user} ));\r\n         }).catch((err) => {\r\n            alert('Unexpected error occured while deleting user');\r\n         });\r\n      }\r\n      \r\n   }\r\n\r\n\r\n   useEffect(_ => {\r\n      dispatch({\r\n         type: \"SET_TITLE\",\r\n         payload: `Dashboard / Users`,\r\n      });\r\n      loadUsers();\r\n   }, []);\r\n\r\n   return (\r\n      <div className=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded\">\r\n         <div className=\"rounded-t mb-0 px-4 py-3 border-0\">\r\n            <div className=\"flex flex-wrap items-center\">\r\n               <div className=\"relative w-full px-4 max-w-full flex-grow flex-1\">\r\n                  <h3 className=\"font-semibold text-base text-gray-800\">\r\n                     Users\r\n            </h3>\r\n               </div>\r\n               <div className=\"relative w-full px-4 max-w-full flex-grow flex-1 text-right\">\r\n                  <Link\r\n                     to=\"/dashboard/users/create\"\r\n                     className=\"bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                     type=\"button\"\r\n                  >\r\n                     Create New\r\n                  </Link>\r\n               </div>\r\n            </div>\r\n         </div>\r\n         <div className=\"block w-full overflow-x-auto\">\r\n\r\n            <table className=\"items-center w-full bg-transparent border-collapse\">\r\n               <thead>\r\n                  <tr>\r\n                     <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                        #\r\n                    </th>\r\n                     <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                        Name\r\n                    </th>\r\n                    <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                        Email\r\n                    </th>\r\n\r\n                    <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                        Type\r\n                    </th>\r\n                     <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                        Actions\r\n                    </th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {users.length > 0 && users.map((user, index) =>\r\n                     <tr key={index}>\r\n                        <th className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-left\">\r\n                           {index+1}\r\n                        </th>\r\n                        <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n                           {user.name}\r\n                        </td>\r\n                        <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n                           {user.email}\r\n                        </td>\r\n                        <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n                           {user.isAdmin ? 'Administrator' : 'User'}\r\n                        </td>\r\n                        <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n\r\n                           <button\r\n                              className=\"bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                              type=\"button\"\r\n                              onClick={(e) => { e.stopPropagation();editUser(user._id)}}\r\n                           >\r\n                              Edit\r\n                        </button>\r\n\r\n                           <button\r\n                              className=\"bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                              type=\"button\"\r\n                              onClick={(e) => { e.stopPropagation();deleteUser(user._id)}}\r\n                           >\r\n                              Delete\r\n                        </button>\r\n\r\n                        </td>\r\n                     </tr>\r\n                  )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n","C:\\xampp8\\htdocs\\apparelisland-local\\client\\src\\components\\DashboardUsersCreate.js",["367","368","369","370","371","372"],"import { useEffect, useContext, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Listbox, Transition } from \"@headlessui/react\";\r\nimport { Context } from \"./Store\";\r\nimport axios from \"../actions/axios\";\r\n\r\nexport default (props) => {\r\n\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    const [action, setAction] = useState('Add');\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [department, setDepartment] = useState('');\r\n    const [departmentName, setDepartmentName] = useState('Choose a department');\r\n\r\n    const [deps, setDeps] = useState([]);\r\n\r\n    const getDepartmentName = (selected) => {\r\n\r\n        let ret = 'Choose a department';\r\n        deps.forEach(dep => {\r\n            if (dep._id === selected) {\r\n                ret = dep.name;\r\n            }\r\n\r\n        });\r\n        return ret;\r\n    }\r\n    const onDepartmentSelected = (e) => { setDepartment(e); setDepartmentName(getDepartmentName(e)); }\r\n\r\n    const onSubmit = (e) => {\r\n        if (action === 'Add') {\r\n            addUser(e);\r\n        } else if (action === 'Update') {\r\n            updateUser(e);\r\n        } else {\r\n            alert('Unexpected Error Occured.');\r\n        }\r\n    }\r\n\r\n    const addUser = async (e) => {\r\n        e.preventDefault();\r\n        await axios.post('/users/new', {\r\n            name: name,\r\n            email: email,\r\n            password: password,\r\n            isAdmin: isAdmin,\r\n            department: department\r\n        }).then((res) => {\r\n            navigate('/dashboard/users');\r\n        }).catch((err) => {\r\n            alert('Unexpected Error Occured While Adding User');\r\n        });\r\n\r\n    };\r\n\r\n    const updateUser = async (e) => {\r\n        e.preventDefault();\r\n        await axios.post('/users/update/' + id, {\r\n            name: name,\r\n            password: password,\r\n            isAdmin: isAdmin,\r\n            department: department\r\n        }).then((res) => {\r\n            navigate('/dashboard/users');\r\n        }).catch((err) => {\r\n            alert('Unexpected Error Occured while updating user');\r\n        });;\r\n    }\r\n\r\n    const [state, dispatch] = useContext(Context);\r\n    useEffect(_ => {\r\n        dispatch({\r\n            type: \"SET_TITLE\",\r\n            payload: `Dashboard / Departments / Create`,\r\n        });\r\n\r\n    }, []);\r\n\r\n    useEffect(async () => {\r\n        await axios.get('/department/sync').then(\r\n            (response) => {\r\n                console.log(response.data);\r\n                setDeps(response.data);\r\n\r\n            }\r\n        ).catch(err => {\r\n            alert('Error occured while fetching departments');\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            setAction('Update');\r\n            axios.get('/users/find/' + id).then(\r\n                (response) => {\r\n                    if (response.data) {\r\n                        setName(response.data.name);\r\n                        setEmail(response.data.email);\r\n                        setIsAdmin(response.data.isAdmin);\r\n                        setDepartment(response.data.department);\r\n                    } else {\r\n                        alert('Unexpected Error Occured while fetching user details');\r\n                    }\r\n                }\r\n            ).catch(err => {\r\n                alert('Unexpected Error')\r\n            });\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div class=\"mt-10 sm:mt-0\">\r\n            <div class=\"sm: px-10 md:px-20 lg:px-40 xl:px-64 py-10\">\r\n                <div class=\"mt-5 md:mt-0 md:col-span-2\">\r\n                    <form onSubmit={onSubmit} method=\"POST\">\r\n                        <div class=\"shadow overflow-hidden w-full sm:rounded-md\">\r\n                            <div class=\"px-4 py-5 bg-white sm:p-6\">\r\n                                <div class=\"grid grid-cols-6 gap-6\">\r\n\r\n                                    <div class=\"col-span-6 sm:col-span-4\">\r\n                                        <label\r\n                                            htmlFor=\"name\"\r\n                                            class=\"block text-sm font-medium text-gray-700\"\r\n                                        >\r\n                                            Name\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"name\"\r\n                                            id=\"name\"\r\n                                            value={name}\r\n                                            onChange={(e) => { setName(e.target.value) }}\r\n                                            required\r\n                                            autoComplete=\"name\"\r\n                                            class=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div class=\"col-span-6 sm:col-span-4\">\r\n                                        <label\r\n                                            htmlFor=\"name\"\r\n                                            class=\"block text-sm font-medium text-gray-700\"\r\n                                        >\r\n                                            Email\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"email\"\r\n                                            id=\"email\"\r\n                                            value={email}\r\n                                            onChange={(e) => { setEmail(e.target.value) }}\r\n                                            required\r\n                                            autoComplete=\"email\"\r\n                                            class=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                                            disabled={ action=='Add' ? false:true}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div class=\"col-span-6 sm:col-span-4\">\r\n                                        <label\r\n                                            htmlFor=\"password\"\r\n                                            class=\"block text-sm font-medium text-gray-700\"\r\n                                        >\r\n                                            Password\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            name=\"password\"\r\n                                            id=\"password\"\r\n                                            value={password}\r\n                                            required\r\n                                            onChange={(e) => { setPassword(e.target.value) }}\r\n                                            autoComplete=\"password\"\r\n                                            class=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div class=\"col-span-6 sm:col-span-4\">\r\n                                        <label\r\n                                            htmlFor=\"isAdmin\"\r\n                                            class=\"block text-sm font-medium text-gray-700\"\r\n                                        >\r\n                                            User Type\r\n                                        </label>\r\n\r\n                                        <select onChange={(e) => { setIsAdmin(e.target.value) }}\r\n                                            class=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                                            name=\"isAdmin\" required>\r\n                                            <option value=\"false\">Simple User</option>\r\n                                            <option value=\"true\">Administrator</option>\r\n                                        </select>\r\n\r\n                                    </div>\r\n\r\n                                    <div class=\"col-span-6 sm:col-span-4\">\r\n\r\n                                        <Listbox\r\n                                            as=\"div\"\r\n                                            className=\"h-10\"\r\n                                            onChange={onDepartmentSelected}\r\n                                        >\r\n                                            {({ open }) => (\r\n                                                <>\r\n\r\n                                                    <Listbox.Label className=\"block font-medium leading-5 text-gray-700\">\r\n                                                        Choose Department\r\n                                                    </Listbox.Label>\r\n\r\n                                                    <div className=\"relative py-2\">\r\n                                                        <span className=\"inline-block w-full rounded-md shadow-sm\">\r\n                                                            <Listbox.Button className=\"relative w-full py-2 pl-3 pr-10 text-left transition duration-150 ease-in-out bg-white border border-gray-300 rounded-md cursor-default focus:outline-none focus:shadow-outline-blue focus:border-blue-300 sm:text-sm sm:leading-5\">\r\n                                                                <span className=\"block truncate\">\r\n                                                                    {departmentName}\r\n                                                                </span>\r\n                                                                <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\r\n                                                                    <svg\r\n                                                                        className=\"w-5 h-5 text-gray-400\"\r\n                                                                        viewBox=\"0 0 20 20\"\r\n                                                                        fill=\"none\"\r\n                                                                        stroke=\"currentColor\"\r\n                                                                    >\r\n                                                                        <path\r\n                                                                            d=\"M7 7l3-3 3 3m0 6l-3 3-3-3\"\r\n                                                                            strokeWidth=\"1.5\"\r\n                                                                            strokeLinecap=\"round\"\r\n                                                                            strokeLinejoin=\"round\"\r\n                                                                        />\r\n                                                                    </svg>\r\n                                                                </span>\r\n                                                            </Listbox.Button>\r\n                                                        </span>\r\n\r\n                                                        <Transition\r\n                                                            show={open}\r\n                                                            leave=\"transition ease-in duration-100\"\r\n                                                            leaveFrom=\"opacity-100\"\r\n                                                            leaveTo=\"opacity-0\"\r\n                                                            className=\"absolute z-10 w-full mt-1 bg-white rounded-md shadow-lg\"\r\n                                                        >\r\n                                                            <Listbox.Options\r\n                                                                static\r\n                                                                className=\"py-1 overflow-auto text-base leading-6 rounded-md shadow-xs max-h-60 focus:outline-none sm:text-sm sm:leading-5\"\r\n                                                            >\r\n                                                                {deps.map((dep, index) => (\r\n                                                                    <Listbox.Option key={index} value={dep._id}>\r\n                                                                        {({ selected, active }) => (\r\n                                                                            <div\r\n                                                                                className={`${active\r\n                                                                                    ? \"text-white bg-blue-600\"\r\n                                                                                    : \"text-gray-900\"\r\n                                                                                    } cursor-default select-none relative py-2 pl-8 pr-4`}\r\n                                                                            >\r\n                                                                                <span\r\n                                                                                    className={`${selected\r\n                                                                                        ? \"font-semibold\"\r\n                                                                                        : \"font-normal\"\r\n                                                                                        } block truncate`}\r\n                                                                                >\r\n                                                                                    {dep.name}\r\n                                                                                </span>\r\n                                                                                {selected && (\r\n                                                                                    <span\r\n                                                                                        className={`${active\r\n                                                                                            ? \"text-white\"\r\n                                                                                            : \"text-blue-600\"\r\n                                                                                            } absolute inset-y-0 left-0 flex items-center pl-1.5`}\r\n                                                                                    >\r\n                                                                                        <svg\r\n                                                                                            className=\"w-5 h-5\"\r\n                                                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                                                            viewBox=\"0 0 20 20\"\r\n                                                                                            fill=\"currentColor\"\r\n                                                                                        >\r\n                                                                                            <path\r\n                                                                                                fillRule=\"evenodd\"\r\n                                                                                                d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\r\n                                                                                                clipRule=\"evenodd\"\r\n                                                                                            />\r\n                                                                                        </svg>\r\n                                                                                    </span>\r\n                                                                                )}\r\n                                                                            </div>\r\n                                                                        )}\r\n                                                                    </Listbox.Option>\r\n                                                                ))}\r\n                                                            </Listbox.Options>\r\n                                                        </Transition>\r\n                                                    </div>\r\n                                                </>\r\n                                            )}\r\n                                        </Listbox>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    class=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-pink-600 hover:bg-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500\"\r\n                                >\r\n                                    {action}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n",{"ruleId":"373","replacedBy":"374"},{"ruleId":"375","replacedBy":"376"},{"ruleId":"377","severity":1,"message":"378","line":12,"column":1,"nodeType":"379","endLine":33,"endColumn":3},{"ruleId":"377","severity":1,"message":"378","line":21,"column":1,"nodeType":"379","endLine":227,"endColumn":3},{"ruleId":"380","severity":1,"message":"381","line":71,"column":7,"nodeType":"382","endLine":71,"endColumn":9,"suggestions":"383"},{"ruleId":"380","severity":1,"message":"384","line":78,"column":7,"nodeType":"382","endLine":78,"endColumn":14,"suggestions":"385"},{"ruleId":"386","severity":1,"message":"387","line":90,"column":46,"nodeType":"388","messageId":"389","endLine":90,"endColumn":48},{"ruleId":"386","severity":1,"message":"387","line":100,"column":37,"nodeType":"388","messageId":"389","endLine":100,"endColumn":39},{"ruleId":"386","severity":1,"message":"387","line":119,"column":30,"nodeType":"388","messageId":"389","endLine":119,"endColumn":32},{"ruleId":"386","severity":1,"message":"387","line":127,"column":47,"nodeType":"388","messageId":"389","endLine":127,"endColumn":49},{"ruleId":"386","severity":1,"message":"390","line":135,"column":16,"nodeType":"388","messageId":"389","endLine":135,"endColumn":18},{"ruleId":"380","severity":1,"message":"391","line":160,"column":7,"nodeType":"382","endLine":160,"endColumn":14,"suggestions":"392"},{"ruleId":"380","severity":1,"message":"393","line":174,"column":7,"nodeType":"382","endLine":174,"endColumn":9,"suggestions":"394"},{"ruleId":"377","severity":1,"message":"378","line":13,"column":1,"nodeType":"379","endLine":181,"endColumn":3},{"ruleId":"380","severity":1,"message":"384","line":71,"column":7,"nodeType":"382","endLine":71,"endColumn":14,"suggestions":"395"},{"ruleId":"380","severity":1,"message":"396","line":78,"column":7,"nodeType":"382","endLine":78,"endColumn":9,"suggestions":"397"},{"ruleId":"377","severity":1,"message":"378","line":23,"column":1,"nodeType":"379","endLine":111,"endColumn":3},{"ruleId":"380","severity":1,"message":"381","line":73,"column":7,"nodeType":"382","endLine":73,"endColumn":9,"suggestions":"398"},{"ruleId":"380","severity":1,"message":"384","line":80,"column":7,"nodeType":"382","endLine":80,"endColumn":14,"suggestions":"399"},{"ruleId":"380","severity":1,"message":"396","line":95,"column":7,"nodeType":"382","endLine":95,"endColumn":9,"suggestions":"400"},{"ruleId":"401","severity":1,"message":"402","line":8,"column":8,"nodeType":"403","messageId":"404","endLine":8,"endColumn":10},{"ruleId":"386","severity":1,"message":"387","line":26,"column":22,"nodeType":"388","messageId":"389","endLine":26,"endColumn":24},{"ruleId":"380","severity":1,"message":"405","line":79,"column":7,"nodeType":"382","endLine":79,"endColumn":9,"suggestions":"406"},{"ruleId":"380","severity":1,"message":"407","line":100,"column":7,"nodeType":"382","endLine":100,"endColumn":17,"suggestions":"408"},{"ruleId":"380","severity":1,"message":"409","line":106,"column":7,"nodeType":"382","endLine":106,"endColumn":14,"suggestions":"410"},{"ruleId":"401","severity":1,"message":"411","line":15,"column":18,"nodeType":"403","messageId":"404","endLine":15,"endColumn":26},{"ruleId":"380","severity":1,"message":"412","line":54,"column":7,"nodeType":"382","endLine":54,"endColumn":14,"suggestions":"413"},{"ruleId":"401","severity":1,"message":"414","line":5,"column":8,"nodeType":"403","messageId":"404","endLine":5,"endColumn":22},{"ruleId":"401","severity":1,"message":"415","line":6,"column":8,"nodeType":"403","messageId":"404","endLine":6,"endColumn":25},{"ruleId":"401","severity":1,"message":"416","line":9,"column":11,"nodeType":"403","messageId":"404","endLine":9,"endColumn":16},{"ruleId":"380","severity":1,"message":"396","line":15,"column":7,"nodeType":"382","endLine":15,"endColumn":9,"suggestions":"417"},{"ruleId":"377","severity":1,"message":"378","line":7,"column":1,"nodeType":"379","endLine":140,"endColumn":3},{"ruleId":"401","severity":1,"message":"416","line":11,"column":11,"nodeType":"403","messageId":"404","endLine":11,"endColumn":16},{"ruleId":"380","severity":1,"message":"396","line":35,"column":7,"nodeType":"382","endLine":35,"endColumn":9,"suggestions":"418"},{"ruleId":"401","severity":1,"message":"416","line":30,"column":11,"nodeType":"403","messageId":"404","endLine":30,"endColumn":16},{"ruleId":"380","severity":1,"message":"396","line":36,"column":7,"nodeType":"382","endLine":36,"endColumn":9,"suggestions":"419"},{"ruleId":"401","severity":1,"message":"420","line":2,"column":10,"nodeType":"403","messageId":"404","endLine":2,"endColumn":14},{"ruleId":"401","severity":1,"message":"421","line":3,"column":8,"nodeType":"403","messageId":"404","endLine":3,"endColumn":11},{"ruleId":"401","severity":1,"message":"416","line":24,"column":11,"nodeType":"403","messageId":"404","endLine":24,"endColumn":16},{"ruleId":"380","severity":1,"message":"396","line":30,"column":7,"nodeType":"382","endLine":30,"endColumn":9,"suggestions":"422"},{"ruleId":"377","severity":1,"message":"378","line":7,"column":1,"nodeType":"379","endLine":114,"endColumn":3},{"ruleId":"401","severity":1,"message":"416","line":11,"column":11,"nodeType":"403","messageId":"404","endLine":11,"endColumn":16},{"ruleId":"380","severity":1,"message":"396","line":35,"column":7,"nodeType":"382","endLine":35,"endColumn":9,"suggestions":"423"},{"ruleId":"373","replacedBy":"424"},{"ruleId":"375","replacedBy":"425"},{"ruleId":"377","severity":1,"message":"378","line":12,"column":1,"nodeType":"379","endLine":33,"endColumn":3},{"ruleId":"377","severity":1,"message":"378","line":18,"column":1,"nodeType":"379","endLine":241,"endColumn":3},{"ruleId":"401","severity":1,"message":"416","line":21,"column":11,"nodeType":"403","messageId":"404","endLine":21,"endColumn":16},{"ruleId":"386","severity":1,"message":"390","line":40,"column":27,"nodeType":"388","messageId":"389","endLine":40,"endColumn":29},{"ruleId":"386","severity":1,"message":"387","line":54,"column":21,"nodeType":"388","messageId":"389","endLine":54,"endColumn":23},{"ruleId":"386","severity":1,"message":"390","line":73,"column":79,"nodeType":"388","messageId":"389","endLine":73,"endColumn":81},{"ruleId":"386","severity":1,"message":"387","line":88,"column":40,"nodeType":"388","messageId":"389","endLine":88,"endColumn":42},{"ruleId":"380","severity":1,"message":"426","line":116,"column":7,"nodeType":"382","endLine":116,"endColumn":9,"suggestions":"427"},{"ruleId":"380","severity":1,"message":"393","line":130,"column":7,"nodeType":"382","endLine":130,"endColumn":9,"suggestions":"428"},{"ruleId":"377","severity":1,"message":"378","line":13,"column":1,"nodeType":"379","endLine":193,"endColumn":3},{"ruleId":"380","severity":1,"message":"384","line":83,"column":7,"nodeType":"382","endLine":83,"endColumn":14,"suggestions":"429"},{"ruleId":"380","severity":1,"message":"396","line":90,"column":7,"nodeType":"382","endLine":90,"endColumn":9,"suggestions":"430"},{"ruleId":"386","severity":1,"message":"387","line":104,"column":31,"nodeType":"388","messageId":"389","endLine":104,"endColumn":33},{"ruleId":"377","severity":1,"message":"378","line":20,"column":1,"nodeType":"379","endLine":70,"endColumn":3},{"ruleId":"380","severity":1,"message":"384","line":31,"column":7,"nodeType":"382","endLine":31,"endColumn":14,"suggestions":"431"},{"ruleId":"380","severity":1,"message":"396","line":47,"column":7,"nodeType":"382","endLine":47,"endColumn":9,"suggestions":"432"},{"ruleId":"380","severity":1,"message":"384","line":42,"column":7,"nodeType":"382","endLine":42,"endColumn":9,"suggestions":"433"},{"ruleId":"386","severity":1,"message":"387","line":48,"column":24,"nodeType":"388","messageId":"389","endLine":48,"endColumn":26},{"ruleId":"380","severity":1,"message":"405","line":101,"column":7,"nodeType":"382","endLine":101,"endColumn":9,"suggestions":"434"},{"ruleId":"380","severity":1,"message":"407","line":122,"column":7,"nodeType":"382","endLine":122,"endColumn":17,"suggestions":"435"},{"ruleId":"380","severity":1,"message":"409","line":128,"column":7,"nodeType":"382","endLine":128,"endColumn":14,"suggestions":"436"},{"ruleId":"437","severity":1,"message":"438","line":160,"column":61,"nodeType":"439","endLine":160,"endColumn":119},{"ruleId":"401","severity":1,"message":"411","line":15,"column":18,"nodeType":"403","messageId":"404","endLine":15,"endColumn":26},{"ruleId":"380","severity":1,"message":"412","line":54,"column":7,"nodeType":"382","endLine":54,"endColumn":14,"suggestions":"440"},{"ruleId":"401","severity":1,"message":"416","line":53,"column":11,"nodeType":"403","messageId":"404","endLine":53,"endColumn":16},{"ruleId":"380","severity":1,"message":"396","line":59,"column":7,"nodeType":"382","endLine":59,"endColumn":9,"suggestions":"441"},{"ruleId":"377","severity":1,"message":"378","line":7,"column":1,"nodeType":"379","endLine":323,"endColumn":3},{"ruleId":"401","severity":1,"message":"416","line":18,"column":11,"nodeType":"403","messageId":"404","endLine":18,"endColumn":16},{"ruleId":"380","severity":1,"message":"396","line":49,"column":7,"nodeType":"382","endLine":49,"endColumn":9,"suggestions":"442"},{"ruleId":"386","severity":1,"message":"387","line":84,"column":26,"nodeType":"388","messageId":"389","endLine":84,"endColumn":28},{"ruleId":"443","severity":1,"message":"444","line":264,"column":22,"nodeType":"439","endLine":264,"endColumn":187},{"ruleId":"443","severity":1,"message":"444","line":267,"column":22,"nodeType":"439","endLine":267,"endColumn":192},{"ruleId":"443","severity":1,"message":"445","line":286,"column":31,"nodeType":"439","endLine":286,"endColumn":245},{"ruleId":"443","severity":1,"message":"445","line":299,"column":34,"nodeType":"439","endLine":300,"endColumn":254},{"ruleId":"386","severity":1,"message":"390","line":300,"column":52,"nodeType":"388","messageId":"389","endLine":300,"endColumn":54},{"ruleId":"443","severity":1,"message":"445","line":307,"column":31,"nodeType":"439","endLine":307,"endColumn":243},{"ruleId":"401","severity":1,"message":"416","line":50,"column":11,"nodeType":"403","messageId":"404","endLine":50,"endColumn":16},{"ruleId":"380","severity":1,"message":"396","line":56,"column":7,"nodeType":"382","endLine":56,"endColumn":9,"suggestions":"446"},{"ruleId":"380","severity":1,"message":"391","line":72,"column":7,"nodeType":"382","endLine":72,"endColumn":9,"suggestions":"447"},{"ruleId":"401","severity":1,"message":"448","line":4,"column":10,"nodeType":"403","messageId":"404","endLine":4,"endColumn":18},{"ruleId":"401","severity":1,"message":"416","line":131,"column":11,"nodeType":"403","messageId":"404","endLine":131,"endColumn":16},{"ruleId":"380","severity":1,"message":"396","line":137,"column":7,"nodeType":"382","endLine":137,"endColumn":9,"suggestions":"449"},{"ruleId":"380","severity":1,"message":"391","line":162,"column":7,"nodeType":"382","endLine":162,"endColumn":9,"suggestions":"450"},{"ruleId":"377","severity":1,"message":"378","line":7,"column":1,"nodeType":"379","endLine":128,"endColumn":3},{"ruleId":"401","severity":1,"message":"416","line":12,"column":11,"nodeType":"403","messageId":"404","endLine":12,"endColumn":16},{"ruleId":"380","severity":1,"message":"396","line":49,"column":7,"nodeType":"382","endLine":49,"endColumn":9,"suggestions":"451"},{"ruleId":"380","severity":1,"message":"452","line":113,"column":7,"nodeType":"382","endLine":113,"endColumn":9,"suggestions":"453"},{"ruleId":"380","severity":1,"message":"454","line":105,"column":7,"nodeType":"382","endLine":105,"endColumn":9,"suggestions":"455"},{"ruleId":"373","replacedBy":"456"},{"ruleId":"375","replacedBy":"457"},{"ruleId":"377","severity":1,"message":"378","line":7,"column":1,"nodeType":"379","endLine":137,"endColumn":3},{"ruleId":"401","severity":1,"message":"416","line":13,"column":11,"nodeType":"403","messageId":"404","endLine":13,"endColumn":16},{"ruleId":"380","severity":1,"message":"396","line":51,"column":7,"nodeType":"382","endLine":51,"endColumn":9,"suggestions":"458"},{"ruleId":"377","severity":1,"message":"378","line":7,"column":1,"nodeType":"379","endLine":320,"endColumn":3},{"ruleId":"401","severity":1,"message":"416","line":76,"column":12,"nodeType":"403","messageId":"404","endLine":76,"endColumn":17},{"ruleId":"380","severity":1,"message":"396","line":83,"column":8,"nodeType":"382","endLine":83,"endColumn":10,"suggestions":"459"},{"ruleId":"380","severity":1,"message":"460","line":85,"column":15,"nodeType":"461","endLine":95,"endColumn":6},{"ruleId":"380","severity":1,"message":"391","line":115,"column":8,"nodeType":"382","endLine":115,"endColumn":10,"suggestions":"462"},{"ruleId":"386","severity":1,"message":"390","line":163,"column":62,"nodeType":"388","messageId":"389","endLine":163,"endColumn":64},"no-native-reassign",["463"],"no-negated-in-lhs",["464"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.","ArrayExpression",["465"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["466"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["467"],"React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'props.name'. Either include them or remove the dependency array.",["468"],["469"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["470"],["471"],["472"],["473"],"no-unused-vars","'fs' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'order_id'. Either include it or remove the dependency array.",["474"],"React Hook useEffect has a missing dependency: 'phase'. Either include it or remove the dependency array.",["475"],"React Hook useEffect has a missing dependency: 'messages'. Either include it or remove the dependency array.",["476"],"'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkAdmin'. Either include it or remove the dependency array.",["477"],"'CardPageVisits' is defined but never used.","'CardSocialTraffic' is defined but never used.","'state' is assigned a value but never used.",["478"],["479"],["480"],"'Link' is defined but never used.","'SVG' is defined but never used.",["481"],["482"],["463"],["464"],"React Hook useEffect has a missing dependency: 'order.phases'. Either include it or remove the dependency array.",["483"],["484"],["485"],["486"],["487"],["488"],["489"],["490"],["491"],["492"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement",["493"],["494"],["495"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["496"],["497"],"'Navigate' is defined but never used.",["498"],["499"],["500"],"React Hook React.useEffect has missing dependencies: 'salesData.currentYear' and 'salesData.prevData'. Either include them or remove the dependency array.",["501"],"React Hook React.useEffect has missing dependencies: 'ordersData.currentYear' and 'ordersData.prevYear'. Either include them or remove the dependency array.",["502"],["463"],["464"],["503"],["504"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["505"],"no-global-assign","no-unsafe-negation",{"desc":"506","fix":"507"},{"desc":"508","fix":"509"},{"desc":"510","fix":"511"},{"desc":"512","fix":"513"},{"desc":"508","fix":"514"},{"desc":"515","fix":"516"},{"desc":"506","fix":"517"},{"desc":"508","fix":"518"},{"desc":"515","fix":"519"},{"desc":"520","fix":"521"},{"desc":"522","fix":"523"},{"desc":"522","fix":"524"},{"desc":"525","fix":"526"},{"desc":"515","fix":"527"},{"desc":"515","fix":"528"},{"desc":"515","fix":"529"},{"desc":"515","fix":"530"},{"desc":"515","fix":"531"},{"desc":"532","fix":"533"},{"desc":"512","fix":"534"},{"desc":"508","fix":"535"},{"desc":"515","fix":"536"},{"desc":"508","fix":"537"},{"desc":"515","fix":"538"},{"desc":"539","fix":"540"},{"desc":"520","fix":"541"},{"desc":"522","fix":"542"},{"desc":"522","fix":"543"},{"desc":"525","fix":"544"},{"desc":"515","fix":"545"},{"desc":"515","fix":"546"},{"desc":"515","fix":"547"},{"desc":"548","fix":"549"},{"desc":"515","fix":"550"},{"desc":"548","fix":"551"},{"desc":"515","fix":"552"},{"desc":"553","fix":"554"},{"desc":"555","fix":"556"},{"desc":"515","fix":"557"},{"desc":"515","fix":"558"},{"desc":"548","fix":"559"},"Update the dependencies array to be: [dispatch, state]",{"range":"560","text":"561"},"Update the dependencies array to be: [navigate, state]",{"range":"562","text":"563"},"Update the dependencies array to be: [id, order]",{"range":"564","text":"565"},"Update the dependencies array to be: [dispatch, id, props.name]",{"range":"566","text":"567"},{"range":"568","text":"563"},"Update the dependencies array to be: [dispatch]",{"range":"569","text":"570"},{"range":"571","text":"561"},{"range":"572","text":"563"},{"range":"573","text":"570"},"Update the dependencies array to be: [order_id]",{"range":"574","text":"575"},"Update the dependencies array to be: [messages, phase]",{"range":"576","text":"577"},{"range":"578","text":"577"},"Update the dependencies array to be: [checkAdmin, state]",{"range":"579","text":"580"},{"range":"581","text":"570"},{"range":"582","text":"570"},{"range":"583","text":"570"},{"range":"584","text":"570"},{"range":"585","text":"570"},"Update the dependencies array to be: [order.phases]",{"range":"586","text":"587"},{"range":"588","text":"567"},{"range":"589","text":"563"},{"range":"590","text":"570"},{"range":"591","text":"563"},{"range":"592","text":"570"},"Update the dependencies array to be: [navigate]",{"range":"593","text":"594"},{"range":"595","text":"575"},{"range":"596","text":"577"},{"range":"597","text":"577"},{"range":"598","text":"580"},{"range":"599","text":"570"},{"range":"600","text":"570"},{"range":"601","text":"570"},"Update the dependencies array to be: [id]",{"range":"602","text":"603"},{"range":"604","text":"570"},{"range":"605","text":"603"},{"range":"606","text":"570"},"Update the dependencies array to be: [salesData.currentYear, salesData.prevData]",{"range":"607","text":"608"},"Update the dependencies array to be: [ordersData.currentYear, ordersData.prevYear]",{"range":"609","text":"610"},{"range":"611","text":"570"},{"range":"612","text":"570"},{"range":"613","text":"603"},[1716,1718],"[dispatch, state]",[1877,1884],"[navigate, state]",[4217,4224],"[id, order]",[4556,4558],"[dispatch, id, props.name]",[1652,1659],[1778,1780],"[dispatch]",[1824,1826],[1983,1990],[2229,2231],[1947,1949],"[order_id]",[2535,2545],"[messages, phase]",[2654,2661],[1329,1336],"[checkAdmin, state]",[598,600],[807,809],[951,953],[867,869],[883,885],[3459,3461],"[order.phases]",[3794,3796],[2138,2145],[2264,2266],[988,995],[1245,1247],[1125,1127],"[navigate]",[2581,2583],[3154,3164],[3269,3276],[1329,1336],[1789,1791],[1310,1312],[1584,1586],[2055,2057],"[id]",[4340,4342],[5325,5327],[1379,1381],[3620,3622],"[salesData.currentYear, salesData.prevData]",[3311,3313],"[ordersData.currentYear, ordersData.prevYear]",[1277,1279],[2481,2483],[3524,3526]]